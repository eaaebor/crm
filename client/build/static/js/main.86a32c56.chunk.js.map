{"version":3,"sources":["AuthService.js","Contexts/UserProvider.js","Contexts/CustomerProvider.js","Contexts/ProjectProvider.js","Login.js","Users.js","EditUser.js","User.js","Customers.js","EditCustomer.js","Customer.js","Autocomplete.js","AutocompleteCustomer.js","Projects.js","EditProject.js","Project.js","ProjectReload.js","CustomerReload.js","TopBar.js","News.js","App.js","index.js"],"names":["jwtDecode","require","AuthService","auth_api_url","this","username","password","fetch","method","body","JSON","stringify","res","json","includes","parseInt","status","Error","msg","setToken","token","setUsername","getToken","exp","Date","now","logout","window","location","href","localStorage","setItem","getItem","removeItem","url","options","headers","loggedIn","UserContext","React","createContext","UserProvider","props","API_URL","process","Auth","state","users","user","updates","loggedInUser","text","class","Provider","value","login","a","setState","isLoggedIn","logOut","getUsers","response","updateUser","object","mode","byuser","date","updateFullUser","getUpdates","reverse","getUser","find","getLoggedInUser","_id","updateUserStatus","style","fullname","id","newUser","teamMember","uid","pid","undefined","className","float","cursor","onClick","removeFromTeam","src","imageurl","alt","title","children","Component","CustomerContext","CustomerProvider","customers","customer","comments","getCustomers","getCustomer","company","newCustomer","Object","entries","key","updateCustomer","updateFullCustomer","newComment","comment","deleteCustomer","deleteComment","commentid","customerid","displayCustomer","to","cvr","address","contactpersonname","contactpersonphone","contactpersonemail","name","target","rel","ProjectContext","ProjectProvider","projects","project","team","getProjects","getProject","addProject","deleteProject","updateProject","addUserToProject","Login","feedback","feedbackStyle","display","e","preventDefault","context","message","event","onChange","handleChange","type","placeholder","handleLogin","contextType","Users","showModal","email","phone","classList","Consumer","onSubmit","required","sort","b","localeCompare","map","EditUser","updatedUser","updatedProject","hideModal","update","disableEdit","defaultValue","moment","format","User","position","currentTarget","getBoundingClientRect","oldValue","textContent","left","x","top","y","overlay","width","height","updateValue","getAttribute","newValue","deadline","diff","fetchNewData","document","getElementById","getElementsByClassName","allowEdit","editEnabled","onContextMenu","editUser","p","t","projectname","description","getDeadline","img","c","co","fromNow","closeEdit","edit","updateField","updateFieldRequest","Customers","counter","steps","first","second","third","fourth","warning","facebook","instagram","linkedin","pinterest","hours","hourprice","paymentoptions","closeWarning","nextStep","showWarning","EditCustomer","updatedCustomer","Customer","tooltip","querySelector","closeTooltip","editCustomer","Autocomplete","filter","indexOf","results","updateTeam","hideSuggestions","selected","autoComplete","AutocompleteCustomer","addCustomer","innerHTML","Projects","newProject","createProject","EditProject","teamList","classes","addToTeam","displayUsers","u","ProjectReload","CustomerReload","TopBar","showStatusMenu","News","findUser","about","App","remove","add","activeMenu","path","Project","ReactDOM","render","StrictMode"],"mappings":"oSAAMA,EAAYC,EAAQ,IA0EXC,E,WAvEX,WAAYC,GAAe,oBACvBC,KAAKD,aAAeA,E,2FAGZE,EAAUC,G,yFACAF,KAAKG,MAAMH,KAAKD,aAAc,CAC5CK,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CACjBN,WACAC,e,cAJFM,E,gBAOWA,EAAIC,O,UAAjBA,E,QACA,CAAC,IAAK,KAAKC,SAASC,SAASH,EAAII,S,sBAC3BC,MAAMJ,EAAKK,K,cAErBd,KAAKe,SAASN,EAAKK,IAAIE,OACvBhB,KAAKiB,YAAYhB,G,kBACVQ,G,2IAIP,IAAIO,EAAQhB,KAAKkB,WAQjB,OAPIF,GAC2B,IAAvBpB,EAAUoB,GAAOG,KAAcC,KAAKC,QACpCrB,KAAKsB,SACLC,OAAOC,SAASC,KAAO,KAIH,OAApBzB,KAAKkB,a,+BAGRF,GACLU,aAAaC,QAAQ,QAASX,K,kCAGtBf,GACRyB,aAAaC,QAAQ,WAAY1B,K,oCAIjC,OAAOyB,aAAaE,QAAQ,c,iCAI5B,OAAOF,aAAaE,QAAQ,W,+BAI5BF,aAAaG,WAAW,SACxBH,aAAaG,WAAW,c,6IAGtBC,EAAKC,GACP,IAAMC,EAAU,CACZ,OAAU,mBACV,eAAgB,oBAOpB,OAJIhC,KAAKiC,aACLD,EAAO,cAAoB,UAAYhC,KAAKkB,YAGzCf,MAAM2B,EAAD,aACRE,WACGD,U,KClEFG,EAAcC,IAAMC,gBAoIlBC,E,kDA9HX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAHVC,QAAUC,OAIN,EAAKC,KAAO,IAAI3C,EAAJ,UAAmB,EAAKyC,QAAxB,uBACZ,EAAKG,MAAQ,CACTC,MAAO,GACPC,KAAM,GACNC,QAAS,GACTC,aAAc,CACVlC,OAAQ,CACJmC,KAAM,UACNC,MAAO,aAVJ,E,qDAgBT,IAAD,OAGL,OACI,kBAACd,EAAYe,SAAb,CAAsBC,MAAO,CACzBR,MAAO1C,KAAK0C,MACZS,MAAM,WAAD,4BAAE,WAAOlD,EAAUC,GAAjB,SAAAkD,EAAA,+EAEO,EAAKX,KAAKU,MAAMlD,EAAUC,GAFjC,OAGC,EAAKmD,SAAS,CAAEC,YAAY,IAC5B/B,OAAOC,SAASC,KAAO,IAJxB,wIAAF,qDAAC,GASN8B,OAAQ,WACJ,EAAKd,KAAKnB,SACV,EAAK+B,SAAS,CAAEC,YAAY,IAC5B/B,OAAOC,SAASC,KAAO,KAE3B+B,SAAS,WAAD,4BAAE,8BAAAJ,EAAA,sEACe,EAAKX,KAAKtC,MAAV,UAAmB,EAAKoC,QAAxB,oBADf,cACFkB,EADE,gBAEYA,EAAShD,OAFrB,OAEFkC,EAFE,OAGN,EAAKU,SAAS,CAAEV,MAAOA,IAHjB,2CAAF,kDAAC,GAKTe,WAAW,WAAD,4BAAE,WAAOC,GAAP,SAAAP,EAAA,sEACF,EAAKX,KAAKtC,MAAV,UAAmB,EAAKoC,QAAxB,mBAAkD,CACpDnC,OAAQ,MACRwD,KAAM,OACNvD,KAAMC,KAAKC,UAAU,CACjBoD,OAAQA,EACRE,OAAQnC,aAAaE,QAAQ,UAC7BkC,KAAM1C,KAAKC,UAPX,2CAAF,mDAAC,GAWX0C,eAAe,WAAD,4BAAE,WAAOJ,EAAQ1D,GAAf,SAAAmD,EAAA,sEACN,EAAKX,KAAKtC,MAAV,UAAmB,EAAKoC,QAAxB,wBAAuD,CACzDnC,OAAQ,MACRwD,KAAM,OACNvD,KAAMC,KAAKC,UAAU,CACjBoD,OAAQA,EACR1D,SAAUA,EACV4D,OAAQnC,aAAaE,QAAQ,UAC7BkC,KAAM1C,KAAKC,UARP,2CAAF,qDAAC,GAYf2C,WAAW,WAAD,4BAAE,8BAAAZ,EAAA,sEACa,EAAKX,KAAKtC,MAAV,UAAmB,EAAKoC,QAAxB,sBADb,cACJkB,EADI,gBAEYA,EAAShD,OAFrB,OAEJoC,EAFI,OAGR,EAAKQ,SAAS,CAAER,QAASA,EAAQoB,YAHzB,2CAAF,kDAAC,GAKXC,QAAQ,WAAD,4BAAE,WAAOjE,GAAP,eAAAmD,EAAA,sEACY,EAAKV,MAAMC,MAAMwB,MAAK,SAAAvB,GAAI,OAAIA,EAAK3C,WAAaA,KAD5D,OACD2C,EADC,OAEL,EAAKS,SAAS,CAAET,KAAMA,IAFjB,2CAAF,mDAAC,GAIRwB,gBAAgB,WAAD,4BAAE,WAAOnE,GAAP,eAAAmD,EAAA,yDACI,OAAbnD,EADS,gCAEQ,EAAKyC,MAAMC,MAAMwB,MAAK,SAAAvB,GAAI,OAAIA,EAAK3C,WAAaA,KAFxD,OAEL2C,EAFK,OAGT,EAAKS,SAAS,CAAEP,aAAcF,IAC9B,EAAKS,SAAS,CAAEC,YAAY,IAC5B5B,aAAaC,QAAQ,SAAU,EAAKe,MAAMI,aAAauB,KAL9C,2CAAF,mDAAC,GAShBC,iBAAiB,WAAD,4BAAE,WAAOvB,EAAMwB,GAAb,SAAAnB,EAAA,sEACR,EAAKX,KAAKtC,MAAV,UAAmB,EAAKoC,QAAxB,uBAAsD,CACxDnC,OAAQ,MACRwD,KAAM,OACNvD,KAAMC,KAAKC,UAAU,CACjBwC,KAAMA,EACNwB,MAAOA,EACPtE,SAAU,EAAKyC,MAAMI,aAAa7C,SAClCuE,SAAU,EAAK9B,MAAMI,aAAa0B,SAClCV,KAAM1C,KAAKC,MACXoD,GAAI,EAAK/B,MAAMI,aAAauB,QAVtB,2CAAF,qDAAC,GAcjBK,QAAQ,WAAD,4BAAE,WAAO9B,GAAP,SAAAQ,EAAA,sEACC,EAAKX,KAAKtC,MAAV,UAAmB,EAAKoC,QAAxB,kBAAiD,CACnDnC,OAAQ,OACRwD,KAAM,OACNvD,KAAMC,KAAKC,UAAU,CACjBqC,KAAMA,EACN6B,GAAI,EAAK/B,MAAMI,aAAauB,QAN/B,2CAAF,mDAAC,GAURM,WAAY,SAACC,EAAKC,GACd,IAAIjC,EAAO,EAAKF,MAAMC,MAAMwB,MAAK,SAAAvB,GAAI,OAAIA,EAAKyB,MAAQO,KACtD,QAAaE,IAATlC,EACA,OACI,yBAAKmC,UAAU,cACX,0BAAMR,MAAO,CAAES,MAAO,QAASC,OAAQ,WAAaC,QAAS,kBAAM,EAAKC,eAAevC,EAAKyB,IAAKQ,KAAjG,KACA,yBAAKE,UAAU,0BAAyB,yBAAKA,UAAU,gBAAgBK,IAAKxC,EAAKyC,SAAUC,IAAI,MAC/F,yBAAKP,UAAU,kBAAkBnC,EAAK4B,UACtC,yBAAKO,UAAU,mBAAmBnC,EAAK2C,WAMtDvF,KAAKsC,MAAMkD,c,GA3HDC,a,eCFdC,EAAkBvD,IAAMC,gBAwItBuD,E,kDAlIX,WAAYrD,GAAQ,IAAD,8BACf,cAAMA,IAHVC,QAAUC,OAIN,EAAKC,KAAO,IAAI3C,EAAJ,UAAmB,EAAKyC,QAAxB,uBACZ,EAAKG,MAAQ,CACTkD,UAAW,GACXC,SAAU,CACNC,SAAU,KANH,E,qDAWT,IAAD,OAGL,OACI,kBAACJ,EAAgBzC,SAAjB,CAA0BC,MAAO,CAC7BR,MAAO1C,KAAK0C,MACZqD,aAAa,WAAD,4BAAE,8BAAA3C,EAAA,sEACW,EAAKX,KAAKtC,MAAV,UAAmB,EAAKoC,QAAxB,4BADX,cACNkB,EADM,gBAEYA,EAAShD,OAFrB,OAENmF,EAFM,OAGV,EAAKvC,SAAS,CAAEuC,UAAWA,IAHjB,2CAAF,kDAAC,GAKbI,YAAY,WAAD,4BAAE,WAAOvB,GAAP,eAAArB,EAAA,sEACW,EAAKV,MAAMkD,UAAUzB,MAAK,SAAA0B,GAAQ,OAAIA,EAASxB,MAAQI,KADlE,QACLwB,EADK,QAEDH,SAAS7B,UACjB,EAAKZ,SAAS,CAAEwC,SAAUI,IAHjB,2CAAF,mDAAC,GAKZC,YAAY,WAAD,4BAAE,WAAOL,GAAP,qBAAAzC,EAAA,sDACT,UAA2B+C,OAAOC,QAAQP,GAA1C,eAAsD,EAAD,oBAAzCQ,EAAyC,UACnCvB,IADmC,OAE7Ce,EAAQ,2BACDA,GADC,kBAEHQ,EAAM,kBALV,gBASH,EAAK5D,KAAKtC,MAAV,UAAmB,EAAKoC,QAAxB,0BAAyD,CAC3DnC,OAAQ,OACRwD,KAAM,OACNvD,KAAMC,KAAKC,UAAU,CACjBsF,SAAUA,EACVhC,OAAQnC,aAAaE,QAAQ,UAC7BkC,KAAM1C,KAAKC,UAfV,2CAAF,mDAAC,GAmBZiF,eAAe,WAAD,4BAAE,WAAO3C,GAAP,SAAAP,EAAA,sEACN,EAAKX,KAAKtC,MAAV,UAAmB,EAAKoC,QAAxB,2BAA0D,CAC5DnC,OAAQ,MACRwD,KAAM,OACNvD,KAAMC,KAAKC,UAAU,CACjBoD,OAAQA,EACRE,OAAQnC,aAAaE,QAAQ,UAC7BkC,KAAM1C,KAAKC,UAPP,2CAAF,mDAAC,GAWfkF,mBAAmB,WAAD,4BAAE,WAAO5C,EAAQc,GAAf,SAAArB,EAAA,sEACV,EAAKX,KAAKtC,MAAV,UAAmB,EAAKoC,QAAxB,gCAA+D,CACjEnC,OAAQ,MACRwD,KAAM,OACNvD,KAAMC,KAAKC,UAAU,CACjBoD,OAAQA,EACRc,GAAIA,EACJZ,OAAQnC,aAAaE,QAAQ,UAC7BkC,KAAM1C,KAAKC,UARH,2CAAF,qDAAC,GAYnBmF,WAAW,WAAD,4BAAE,WAAO/B,EAAIgC,GAAX,SAAArD,EAAA,sEACF,EAAKX,KAAKtC,MAAV,UAAmB,EAAKoC,QAAxB,yBAAwD,CAC1DnC,OAAQ,OACRwD,KAAM,OACNvD,KAAMC,KAAKC,UAAU,CACjBkE,GAAIA,EACJgC,QAASA,EACT5C,OAAQnC,aAAaE,QAAQ,cAP7B,2CAAF,qDAAC,GAWX8E,eAAe,WAAD,4BAAE,WAAOjC,GAAP,SAAArB,EAAA,sEACN,EAAKX,KAAKtC,MAAV,UAAmB,EAAKoC,QAAxB,6BAA4D,CAC9DnC,OAAQ,SACRwD,KAAM,OACNvD,KAAMC,KAAKC,UAAU,CACjBkE,GAAIA,EACJZ,OAAQnC,aAAaE,QAAQ,UAC7BkC,KAAM1C,KAAKC,UAPP,2CAAF,mDAAC,GAWfsF,cAAc,WAAD,4BAAE,WAAOC,EAAWC,GAAlB,SAAAzD,EAAA,sEACL,EAAKX,KAAKtC,MAAV,UAAmB,EAAKoC,QAAxB,4BAA2D,CAC7DnC,OAAQ,SACRwD,KAAM,OACNvD,KAAMC,KAAKC,UAAU,CACjBqG,UAAWA,EACXC,WAAYA,EACZhD,OAAQnC,aAAaE,QAAQ,UAC7BkC,KAAM1C,KAAKC,UARR,2CAAF,qDAAC,GAYdyF,gBAAiB,SAACrC,GACd,IAAIoB,EAAW,EAAKnD,MAAMkD,UAAUzB,MAAK,SAAA0B,GAAQ,OAAIA,EAASxB,MAAQI,KACtE,QAAiBK,IAAbe,EACA,OACI,yBAAKd,UAAU,mBACX,wBAAIA,UAAU,2BAAd,oBACA,yBAAKA,UAAU,mBACX,0BAAMA,UAAU,iBAAhB,cAAiD,8BAAM,kBAAC,IAAD,CAAMgC,GAAI,aAAelB,EAASxB,KAAMwB,EAASI,UACxG,0BAAMlB,UAAU,iBAAhB,OAA0C,8BAAOc,EAASmB,KAC1D,0BAAMjC,UAAU,iBAAhB,WAA8C,8BAAOc,EAASoB,SAC9D,0BAAMlC,UAAU,iBAAhB,iBAAoD,8BAAOc,EAASqB,mBACpE,0BAAMnC,UAAU,iBAAhB,yBAA4D,kCAAO,uBAAGtD,KAAI,cAASoE,EAASsB,qBAAuBtB,EAASsB,qBAC5H,0BAAMpC,UAAU,iBAAhB,uBAA0D,8BAAM,uBAAGtD,KAAI,iBAAYoE,EAASuB,qBAAuBvB,EAASuB,qBAC5H,0BAAMrC,UAAU,iBAAhB,cAAiD,8BAAM,uBAAGsC,KAAK,MAAMC,OAAO,SAASC,IAAI,sBAAsB9F,KAAMoE,EAAS/D,KAAM+D,EAAS/D,WAQhK9B,KAAKsC,MAAMkD,c,GA/HGC,aCJlB+B,EAAiBrF,IAAMC,gBA4HrBqF,E,kDAtHX,WAAYnF,GAAQ,IAAD,8BACf,cAAMA,IAHVC,QAAUC,OAIN,EAAKC,KAAO,IAAI3C,EAAJ,UAAmB,EAAKyC,QAAxB,uBACZ,EAAKG,MAAQ,CACTgF,SAAU,GACVC,QAAS,CACLC,KAAM,GACN9B,SAAU,KAPH,E,qDAYT,IAAD,OAGL,OACI,kBAAC0B,EAAevE,SAAhB,CAAyBC,MAAO,CAC5BR,MAAO1C,KAAK0C,MACZmF,YAAY,WAAD,4BAAE,8BAAAzE,EAAA,sEACY,EAAKX,KAAKtC,MAAV,UAAmB,EAAKoC,QAAxB,0BADZ,cACLkB,EADK,gBAEYA,EAAShD,OAFrB,cAELiH,EAFK,OAGT,EAAKrE,SAAS,CAAEqE,SAAUA,IAHjB,kBAIF,sCAJE,2CAAF,kDAAC,GAMZI,WAAW,WAAD,4BAAE,WAAOrD,GAAP,eAAArB,EAAA,sEACY,EAAKV,MAAMgF,SAASvD,MAAK,SAAAwD,GAAO,OAAIA,EAAQtD,MAAQI,KADhE,QACJkD,EADI,QAEA7B,SAAS7B,UACjB,EAAKZ,SAAS,CAAEsE,QAASA,IAHjB,2CAAF,mDAAC,GAKXI,WAAW,WAAD,4BAAE,WAAOJ,GAAP,SAAAvE,EAAA,sEACF,EAAKX,KAAKtC,MAAV,UAAmB,EAAKoC,QAAxB,wBAAuD,CACzDnC,OAAQ,OACRwD,KAAM,OACNvD,KAAMC,KAAKC,UAAU,CACjBoH,QAASA,EACT9D,OAAQnC,aAAaE,QAAQ,UAC7BkC,KAAM1C,KAAKC,UAPX,2CAAF,mDAAC,GAWXmF,WAAW,WAAD,4BAAE,WAAO/B,EAAIgC,GAAX,SAAArD,EAAA,sEACF,EAAKX,KAAKtC,MAAV,UAAmB,EAAKoC,QAAxB,wBAAuD,CACzDnC,OAAQ,OACRwD,KAAM,OACNvD,KAAMC,KAAKC,UAAU,CACjBkE,GAAIA,EACJgC,QAASA,EACT5C,OAAQnC,aAAaE,QAAQ,cAP7B,2CAAF,qDAAC,GAWXoG,cAAc,WAAD,4BAAE,WAAOvD,GAAP,SAAArB,EAAA,sEACL,EAAKX,KAAKtC,MAAV,UAAmB,EAAKoC,QAAxB,2BAA0D,CAC5DnC,OAAQ,SACRwD,KAAM,OACNvD,KAAMC,KAAKC,UAAU,CACjBkE,GAAIA,EACJZ,OAAQnC,aAAaE,QAAQ,UAC7BkC,KAAM1C,KAAKC,UAPR,2CAAF,mDAAC,GAWd4G,cAAc,WAAD,4BAAE,WAAOtE,EAAQc,GAAf,SAAArB,EAAA,sEACL,EAAKX,KAAKtC,MAAV,UAAmB,EAAKoC,QAAxB,yBAAwD,CAC1DnC,OAAQ,OACRwD,KAAM,OACNvD,KAAMC,KAAKC,UAAU,CACjBoD,OAAQA,EACRc,GAAIA,EACJZ,OAAQnC,aAAaE,QAAQ,UAC7BkC,KAAM1C,KAAKC,UARR,2CAAF,qDAAC,GAYd6G,iBAAiB,WAAD,4BAAE,WAAOtF,EAAM6B,GAAb,SAAArB,EAAA,sEACR,EAAKX,KAAKtC,MAAV,UAAmB,EAAKoC,QAAxB,2BAA0D,CAC5DnC,OAAQ,MACRwD,KAAM,OACNvD,KAAMC,KAAKC,UAAU,CACjBqC,KAAMA,EACNiB,OAAQnC,aAAaE,QAAQ,UAC7BkC,KAAM1C,KAAKC,MACXoD,GAAIA,MARE,2CAAF,qDAAC,GAYjBU,eAAe,WAAD,4BAAE,WAAOP,EAAKC,GAAZ,SAAAzB,EAAA,sEACN,EAAKX,KAAKtC,MAAV,UAAmB,EAAKoC,QAAxB,6BAA4D,CAC9DnC,OAAQ,SACRwD,KAAM,OACNvD,KAAMC,KAAKC,UAAU,CACjBqE,IAAKA,EACLC,IAAKA,EACLhB,OAAQnC,aAAaE,QAAQ,UAC7BkC,KAAM1C,KAAKC,UARP,2CAAF,qDAAC,GAYfsF,cAAc,WAAD,4BAAE,WAAOC,EAAWC,GAAlB,SAAAzD,EAAA,sEACL,EAAKX,KAAKtC,MAAV,UAAmB,EAAKoC,QAAxB,2BAA0D,CAC5DnC,OAAQ,SACRwD,KAAM,OACNvD,KAAMC,KAAKC,UAAU,CACjBqG,UAAWA,EACXC,WAAYA,EACZhD,OAAQnC,aAAaE,QAAQ,UAC7BkC,KAAM1C,KAAKC,UARR,2CAAF,qDAAC,KAcbrB,KAAKsC,MAAMkD,c,GAnHEC,aCHxB0C,E,kDACF,WAAY7F,GAAQ,IAAD,8BACf,cAAMA,IACDI,MAAQ,CACTzC,SAAU,GACVC,SAAU,GACVkI,SAAU,GACVC,cAAe,CACXC,QAAS,SAPF,E,iGAYDC,G,8EACdA,EAAEC,iB,SACmBxI,KAAKyI,QAAQtF,MAAMnD,KAAK0C,MAAMzC,SAAUD,KAAK0C,MAAMxC,U,cAApEkI,E,OACJpI,KAAKqD,SAAS,CAAE+E,SAAUA,EAASM,QAASL,cAAe,CAACC,QAAS,W,SAC/DtI,KAAKyI,QAAQjF,W,uBACbxD,KAAKyI,QAAQrE,gBAAgB1C,aAAaE,QAAQ,a,0IAG/C+G,GACT3I,KAAKqD,SAAL,eACKsF,EAAMrB,OAAOD,KAAOsB,EAAMrB,OAAOpE,U,+BAIhC,IAAD,OACL,OACI,oCACI,yBAAK6B,UAAU,SACX,qCACA,0BAAMA,UAAU,aACZ,yBAAKR,MAAOvE,KAAK0C,MAAM2F,cAAetD,UAAU,mBAC5C,0BAAMA,UAAU,kBAAhB,iBACA,8BAAO/E,KAAK0C,MAAM0F,WAEtB,0BAAMrD,UAAU,SAAhB,cACA,2BAAO6D,SAAU,SAAAD,GAAK,OAAI,EAAKE,aAAaF,IAAQtB,KAAK,WAAWyB,KAAK,OAAOC,YAAY,eAAqB,6BACjH,0BAAMhE,UAAU,SAAhB,eACA,2BAAO6D,SAAU,SAAAD,GAAK,OAAI,EAAKE,aAAaF,IAAQtB,KAAK,WAAWyB,KAAK,WAAWC,YAAY,aAAmB,6BACnH,4BAAQ7D,QAAS,SAAAqD,GAAC,OAAI,EAAKS,YAAYT,KAAvC,kB,GAzCJ9C,aAiDpB0C,EAAMc,YAAc/G,EAELiG,QCjDTe,E,kDACF,WAAY5G,GAAQ,IAAD,8BACf,cAAMA,IACDI,MAAQ,CACTyG,WAAW,GAHA,E,0LAQTnJ,KAAKyI,QAAQjF,W,yIAGVmF,GACT3I,KAAKqD,SAAL,eACKsF,EAAMrB,OAAOD,KAAOsB,EAAMrB,OAAOpE,U,uEAI5ByF,G,8EACVA,EAAMH,iBACF9D,EAAU,CACVF,SAAUxE,KAAK0C,MAAM8B,SACrBvE,SAAUD,KAAK0C,MAAMzC,SACrBC,SAAUF,KAAK0C,MAAMxC,SACrBkJ,MAAOpJ,KAAK0C,MAAM0G,MAClBC,MAAOrJ,KAAK0C,MAAM2G,MAClB9D,MAAOvF,KAAK0C,MAAM6C,MAClBzB,KAAM1C,KAAKC,MACXT,OAAQ,CAAEmC,KAAM,QAASC,MAAO,aAChCqC,SAAUrF,KAAK0C,MAAM2C,U,SAEnBrF,KAAKyI,QAAQ/D,QAAQA,G,cAC3B1E,KAAKqD,SAAS,CAAE8F,WAAYnJ,KAAK0C,MAAMyG,Y,SACjCnJ,KAAKyI,QAAQjF,W,uIAGbmF,GACF,CAAC,SAAU,gBAAgBjI,SAASiI,EAAMrB,OAAOgC,UAAU,KAC3DtJ,KAAKqD,SAAS,CAAE8F,WAAYnJ,KAAK0C,MAAMyG,c,+BAKrC,IAAD,OACL,OACI,oCACI,kBAACjH,EAAYqH,SAAb,MACK,SAACd,GAAD,OACG,oCAEK,EAAK/F,MAAMyG,UAAY,oCACpB,yBAAKpE,UAAU,SACX,yBAAKA,UAAU,eAAeG,QAAS,SAAAyD,GAAK,OAAI,EAAKQ,UAAUR,KAC3D,yBAAK5D,UAAU,gBACX,wBAAIA,UAAU,cAAd,kBACA,0BAAMyE,SAAU,SAACb,GAAD,OAAW,EAAKjE,QAAQiE,KACpC,yBAAK5D,UAAU,aACX,2BAAO0E,UAAQ,EAAC1E,UAAU,aAAa+D,KAAK,OAAOC,YAAY,gCAAgC1B,KAAK,WAAWuB,SAAU,SAAAD,GAAK,OAAI,EAAKE,aAAaF,MACpJ,2BAAOc,UAAQ,EAAC1E,UAAU,aAAa+D,KAAK,OAAOC,YAAY,iCAAiC1B,KAAK,WAAWuB,SAAU,SAAAD,GAAK,OAAI,EAAKE,aAAaF,OAEzJ,2BAAOc,UAAQ,EAAC1E,UAAU,aAAa+D,KAAK,OAAOC,YAAY,4BAA4B1B,KAAK,WAAWuB,SAAU,SAAAD,GAAK,OAAI,EAAKE,aAAaF,MAChJ,2BAAOc,UAAQ,EAAC1E,UAAU,aAAa+D,KAAK,OAAOC,YAAY,uBAAuB1B,KAAK,QAAQuB,SAAU,SAAAD,GAAK,OAAI,EAAKE,aAAaF,MACxI,yBAAK5D,UAAU,aACX,2BAAO0E,UAAQ,EAAC1E,UAAU,aAAa+D,KAAK,OAAOC,YAAY,uBAAuB1B,KAAK,QAAQuB,SAAU,SAAAD,GAAK,OAAI,EAAKE,aAAaF,MACxI,2BAAO5D,UAAU,aAAa+D,KAAK,OAAOC,YAAY,+BAA+B1B,KAAK,QAAQuB,SAAU,SAAAD,GAAK,OAAI,EAAKE,aAAaF,OAE3I,2BAAO5D,UAAU,aAAa+D,KAAK,OAAOC,YAAY,kCAAkC1B,KAAK,WAAWuB,SAAU,SAAAD,GAAK,OAAI,EAAKE,aAAaF,MAC7I,4BAAQ5D,UAAU,WAAW+D,KAAK,UAAlC,0BAMd,qCAEN,0BAAM/D,UAAU,iBAAgB,4CAAqB,4BAAQA,UAAU,SAASG,QAAS,SAAAyD,GAAK,OAAI,EAAKQ,UAAUR,KAAQ,uBAAG5D,UAAU,2BAAb,cAApE,yBACpD0D,EAAQ/F,MAAMC,MAAM+G,MAAK,SAACtG,EAAGuG,GAAJ,OAAUvG,EAAEoB,SAASoF,cAAcD,EAAEnF,aAAWqF,KAAI,SAAAjH,GAAI,OAC9E,yBAAKmC,UAAU,iBACX,yBAAKA,UAAU,WAAU,kBAAC,IAAD,CAAMgC,GAAE,gBAAWnE,EAAK3C,WAAY,yBAAKmF,IAAKxC,EAAKyC,SAAUC,IAAI,yBAC1F,yBAAKP,UAAU,gBAAe,2BAAG,kBAAC,IAAD,CAAMgC,GAAE,gBAAWnE,EAAK3C,WAAa2C,EAAK4B,YAC3E,yBAAKO,UAAU,aAAY,2BAAInC,EAAK2C,QACpC,yBAAKR,UAAU,cAAa,uBAAGA,UAAWnC,EAAKhC,OAAOoC,OAAQJ,EAAKhC,OAAOmC,OAC1E,yBAAKgC,UAAU,oBAAmB,uBAAGtD,KAAI,iBAAYmB,EAAKwG,QAAS,2BAAIxG,EAAKwG,SAC5E,yBAAKrE,UAAU,oBAAmB,uBAAGtD,KAAI,cAASmB,EAAKyG,QAAS,2BAAIzG,EAAKyG,sB,GAnFzF5D,aA+FpByD,EAAMD,YAAc/G,EAELgH,Q,iBCjGTY,E,kDACF,WAAYxH,GAAQ,IAAD,8BACf,cAAMA,IACDI,MAAQ,CACTqH,YAAa,IAHF,E,yDASNpB,GACT3I,KAAKqD,SAAS,CACV0G,YAAY,2BACL/J,KAAK0C,MAAMsH,gBADP,kBAENrB,EAAMrB,OAAOD,KAAOsB,EAAMrB,OAAOpE,Y,gCAMpCyF,GACF,eAAejI,SAASiI,EAAMrB,OAAOgC,UAAU,KAC/CtJ,KAAKsC,MAAM2H,c,6JAKTjK,KAAKyI,QAAQ1E,eAAe/D,KAAK0C,MAAMqH,YAAa/J,KAAKsC,MAAMrC,U,uBAC/DD,KAAKsC,MAAM4H,S,OACjBlK,KAAKsC,MAAM6H,c,qIAGL,IAAD,OAEL,OACI,oCAEI,kBAACjI,EAAYqH,SAAb,MACK,SAACd,GAAD,OACG,oCACI,yBAAK1D,UAAU,mBACX,0BAAMA,UAAU,gDAAgDG,QAAS,kBAAM,EAAK5C,MAAM6H,gBAA1F,SACA,0BAAM5E,MAAM,mBAAgBR,UAAU,gDAAgDG,QAAS,kBAAM,EAAKxB,eAA1G,QACA,sDACA,yBAAKqB,UAAU,mBACX,0BAAMA,UAAU,iBAAhB,cAAiD,2BAAO6D,SAAU,SAAAD,GAAK,OAAI,EAAKE,aAAaF,IAAQ5D,UAAU,YAAYsC,KAAK,WAAW+C,aAAc3B,EAAQ/F,MAAME,KAAK4B,WAC5K,0BAAMO,UAAU,iBAAhB,SAA4C,2BAAO6D,SAAU,SAAAD,GAAK,OAAI,EAAKE,aAAaF,IAAQ5D,UAAU,YAAYsC,KAAK,QAAQ+C,aAAc3B,EAAQ/F,MAAME,KAAK2C,QACpK,0BAAMR,UAAU,iBAAhB,SAA4C,2BAAO6D,SAAU,SAAAD,GAAK,OAAI,EAAKE,aAAaF,IAAQ5D,UAAU,YAAYsC,KAAK,QAAQ+C,aAAc3B,EAAQ/F,MAAME,KAAKwG,QACpK,0BAAMrE,UAAU,iBAAhB,WAA8C,2BAAO6D,SAAU,SAAAD,GAAK,OAAI,EAAKE,aAAaF,IAAQ5D,UAAU,YAAYsC,KAAK,QAAQ+C,aAAc3B,EAAQ/F,MAAME,KAAKyG,QACtK,0BAAMtE,UAAU,iBAAhB,eAAkD,2BAAO6D,SAAU,SAAAD,GAAK,OAAI,EAAKE,aAAaF,IAAQ5D,UAAU,YAAYsC,KAAK,WAAW+C,aAAc3B,EAAQ/F,MAAME,KAAKyC,WAC7K,0BAAMN,UAAU,iBAAhB,mBAAsD,0BAAMsC,KAAK,QAAQgD,IAAO5B,EAAQ/F,MAAME,KAAKkB,MAAMwG,OAAO,yB,GAlD7H7E,aA6DvBqE,EAASb,YAAc/G,EAER4H,QC3DTS,E,kDACF,WAAYjI,GAAQ,IAAD,8BACf,cAAMA,IACDI,MAAQ,CACT6B,MAAO,CACH+D,QAAS,SAJF,E,0LAUTtI,KAAKyI,QAAQjF,W,uBACbxD,KAAKyI,QAAQvE,QAAQlE,KAAKsC,MAAMrC,U,qQAIhCD,KAAKyI,QAAQjF,W,uBACbxD,KAAKyI,QAAQvE,QAAQlE,KAAKsC,MAAMrC,U,qIAGjC0I,GACL,IAAI6B,EAAW7B,EAAM8B,cAAcC,wBACnC/B,EAAMH,iBACNxI,KAAKqD,SAAS,CACVsH,SAAUhC,EAAM8B,cAAcG,YAC9BrG,MAAO,CACHiG,SAAU,WACVK,KAAML,EAASM,EACfC,IAAKP,EAASQ,EAAI,GAEtBC,QAAS,CACLC,MAAO,QACPC,OAAQ,QACRJ,IAAK,EACLF,KAAM,EACNL,SAAU,SAEdY,YAAa,CACT/D,KAAMsB,EAAMrB,OAAO+D,aAAa,QAChC5G,GAAIzE,KAAKyI,QAAQ/F,MAAME,KAAKyB,IAC5BiH,SAAU,Q,kCAKVxH,GACR,QAAagB,IAAThB,EAAoB,CACpB,IAAIyH,EAAWlB,IAAOvG,GAAM0H,KAAKnB,MAAU,QAE3C,GAAIkB,EAAW,EAAK,OAAQ,0BAAMxG,UAAU,gBAAhB,oBAA4D,EAAZwG,EAAhD,SACvB,GAAIA,EAAW,GAAKA,EAAW,GAAM,OAAQ,0BAAMxG,UAAU,gBAAgBwG,EAAhC,sBAC7C,GAAIA,EAAW,GAAM,OAAQ,0BAAMxG,UAAU,gBAAgBwG,EAAhC,yB,kCAI9B5C,GACR3I,KAAKqD,SAAS,CACV+H,YAAY,2BACLpL,KAAK0C,MAAM0I,aADP,IAEPE,SAAU3C,EAAMrB,OAAOpE,Y,kFAKVyF,G,wEACrBA,EAAMH,iB,SAEAxI,KAAKyI,QAAQ/E,WAAW1D,KAAK0C,MAAM0I,a,uBACnCpL,KAAKyL,e,OAEXzL,KAAKqD,SAAS,CACVkB,MAAO,CAAE+D,QAAS,UAGtBoD,SAASC,eAAe,kBAAkBzI,MAAQ,G,uIAG5CyF,GAEFA,EAAMrB,SAAWoE,SAASE,uBAAuB,wBAAwB,IACzE5L,KAAKqD,SAAS,CACV4H,QAAS,CACL3C,QAAS,Y,kCAOrBtI,KAAKqD,SAAS,CACVwI,WAAW,EACXC,YAAa,CACTxD,QAAS,Y,oCAMjBtI,KAAKqD,SAAS,CACVwI,WAAW,EACXC,YAAa,CACTxD,QAAS,a,+BAOX,IAAD,OAEL,OACI,oCACI,kBAACpG,EAAYqH,SAAb,MACK,SAACd,GAAD,OACG,oCAEI,2CAAiBA,EAAQ/F,MAAME,KAAK4B,UACpC,yBAAKO,UAAU,oBAEd,EAAKrC,MAAMmJ,UACJ,kBAAC,EAAD,CACI5L,SAAU,EAAKqC,MAAMrC,SACrBkK,YAAa,kBAAM,EAAKA,eACxBD,OAAQ,kBAAM,EAAKuB,kBACT,qCAElB,yBAAK1G,UAAU,kBAAkBR,MAAO,EAAK7B,MAAMoJ,aAC/C,0BAAM/G,UAAU,kCAAkCG,QAAS,SAACyD,GAAD,OAAW,EAAKkD,UAAUlD,KAArF,YACA,sDACA,yBAAK5D,UAAU,mBACX,0BAAMA,UAAU,iBAAhB,cAAiD,0BAAMA,UAAU,OAAOsC,KAAK,WAAW0E,cAAe,SAAApD,GAAK,OAAI,EAAKqD,SAASrD,KAASF,EAAQ/F,MAAME,KAAK4B,UAC1J,0BAAMO,UAAU,iBAAhB,SAA4C,0BAAMA,UAAU,OAAOsC,KAAK,QAAQ0E,cAAe,SAAApD,GAAK,OAAI,EAAKqD,SAASrD,KAASF,EAAQ/F,MAAME,KAAK2C,OAClJ,0BAAMR,UAAU,iBAAhB,SAA4C,0BAAMA,UAAU,OAAOsC,KAAK,QAAQ0E,cAAe,SAAApD,GAAK,OAAI,EAAKqD,SAASrD,KAASF,EAAQ/F,MAAME,KAAKwG,OAClJ,0BAAMrE,UAAU,iBAAhB,WAA8C,0BAAMA,UAAU,OAAOsC,KAAK,QAAQ0E,cAAe,SAAApD,GAAK,OAAI,EAAKqD,SAASrD,KAASF,EAAQ/F,MAAME,KAAKyG,OACpJ,0BAAMtE,UAAU,iBAAhB,eAAkD,0BAAMA,UAAU,OAAOsC,KAAK,WAAW0E,cAAe,SAAApD,GAAK,OAAI,EAAKqD,SAASrD,KAA7E,gCAClD,0BAAM5D,UAAU,iBAAhB,mBAAsD,0BAAMsC,KAAK,QAAQgD,IAAO5B,EAAQ/F,MAAME,KAAKkB,MAAMwG,OAAO,gBAIxH,yBAAKvF,UAAU,uBACX,yBAAKA,UAAU,aAAaO,IAAI,qBAAqBF,IAAKqD,EAAQ/F,MAAME,KAAKyC,YAGjF,yBAAKN,UAAU,eACX,yCACA,kBAACyC,EAAe+B,SAAhB,MACK,SAACd,GAAD,OACG,oCACKA,EAAQ/F,MAAMgF,SAASmC,KAAI,SAAAoC,GAAC,OAAIA,EAAErE,KAAKiC,KAAI,SAAAqC,GAAC,OAAIA,EAAEjM,WAAa,EAAKqC,MAAMrC,SACvE,yBAAK8E,UAAU,kBACX,kBAAC,IAAD,CAAMgC,GAAI,YAAckF,EAAE5H,KAAK,8BAAO4H,EAAEE,cACxC,6BAAMF,EAAEG,aACR,yBAAKrH,UAAU,eACX,8BAAO,EAAKsH,YAAYJ,EAAEV,WACzBU,EAAErE,KAAKiC,KAAI,SAAAyC,GAAG,OAAI,yBAAKhH,IAAI,GAAGP,UAAU,qBAAqBQ,MAAO+G,EAAI9H,SAAUY,IAAKkH,EAAIjH,gBAE3F,gDAM7B,yBAAKN,UAAU,eACX,2CACA,kBAACW,EAAgB6D,SAAjB,MACK,SAACd,GAAD,OACG,oCACKA,EAAQ/F,MAAMkD,UAAUiE,KAAI,SAAA0C,GAAC,OAAIA,EAAEzG,SAAS+D,KAAI,SAAA2C,GAAE,OAAIA,EAAGvM,WAAa,EAAKqC,MAAMrC,SAC9E,yBAAK8E,UAAU,kBACX,yBAAKA,UAAU,oBACX,8BAAO,EAAKzC,MAAMrC,SAAlB,KADJ,4BAEI,kBAAC,IAAD,CAAM8G,GAAI,aAAewF,EAAElI,KACvB,kCAAQkI,EAAEtG,WAGlB,yBAAKlB,UAAU,sBAAsBsF,IAAOmC,EAAG1I,MAAM2I,WACrD,yBAAK1H,UAAU,sBAAsByH,EAAG/F,UACnC,iDAQjC,yBAAK1B,UAAU,uBAAuBR,MAAO,EAAK7B,MAAMuI,QAAS/F,QAAS,SAACyD,GAAD,OAAW,EAAK+D,UAAU/D,KAChG,yBAAK5D,UAAU,gBAAgBR,MAAO,EAAK7B,MAAM6B,OAC7C,yBAAKQ,UAAU,eACX,8BACI,2BAAON,GAAG,iBAAiBsE,YAAa,EAAKrG,MAAMiI,SAAU7B,KAAK,OAAOsB,aAAc,EAAK1H,MAAMiK,KAAM/D,SAAU,SAACD,GAAD,OAAW,EAAKiE,YAAYjE,MAC9I,4BAAQG,KAAK,SAAS5D,QAAS,SAACyD,GAAD,OAAW,EAAKkE,mBAAmBlE,KAAlE,oB,GA9LzBlD,aA2MnB8E,EAAKtB,YAAc/G,EAEJqI,QCjNTuC,E,kDACF,WAAYxK,GAAQ,IAAD,8BACf,cAAMA,IACDI,MAAQ,CACTyG,WAAW,EACX4D,QAAS,EACTC,MAAO,CACHC,OAAO,EACPC,QAAQ,EACRC,OAAO,EACPC,QAAQ,GAEZC,QAAS,CACL/E,QAAS,SAZF,E,0KAmBftI,KAAKyI,QAAQ1C,e,sIAGP4C,GACF,CAAC,SAAU,gBAAgBjI,SAASiI,EAAMrB,OAAOgC,UAAU,KAC3DtJ,KAAKqD,SAAS,CAAE8F,WAAYnJ,KAAK0C,MAAMyG,c,wJAOhB,IAAvBnJ,KAAK0C,MAAMqK,Q,uBACPlH,EAAW,CACXI,QAASjG,KAAK0C,MAAM2E,KACpBJ,QAASjH,KAAK0C,MAAMuE,QACpBD,IAAKhH,KAAK0C,MAAMsE,IAChBlF,IAAK9B,KAAK0C,MAAMZ,IAChBsK,YAAapM,KAAK0C,MAAM0J,YACxBlF,kBAAmBlH,KAAK0C,MAAMwE,kBAC9BC,mBAAoBnH,KAAK0C,MAAMyE,mBAC/BC,mBAAoBpH,KAAK0C,MAAM0E,mBAC/BkG,SAAUtN,KAAK0C,MAAM4K,SACrBC,UAAWvN,KAAK0C,MAAM6K,UACtBC,SAAUxN,KAAK0C,MAAM8K,SACrBC,UAAWzN,KAAK0C,MAAM+K,UACtBC,MAAO1N,KAAK0C,MAAMgL,MAClBC,UAAW3N,KAAK0C,MAAMiL,UACtBC,eAAgB5N,KAAK0C,MAAMkL,gBAE/B5N,KAAKqD,SAAS,CAAE8F,WAAYnJ,KAAK0C,MAAMyG,Y,SACjCnJ,KAAKyI,QAAQvC,YAAYL,G,uBACzB7F,KAAKyI,QAAQ1C,e,8BAGfiH,EAAQ,CAAC,QAAS,SAAU,QAAS,UACzChN,KAAKqD,SAAS,CACV2J,MAAM,2BACChN,KAAK0C,MAAMsK,OADb,uBAEAA,EAAMhN,KAAK0C,MAAMqK,UAAW,GAF5B,cAGAC,EAAMhN,KAAK0C,MAAMqK,QAAU,IAAK,GAHhC,IAKLA,QAAS/M,KAAK0C,MAAMqK,QAAU,I,yIAK9BpE,EAAOlE,GACf,IAAI+F,EAAW7B,EAAMrB,OAAOoD,wBAC5B1K,KAAKqD,SAAS,CACVgK,QAAS,CACLxC,KAAML,EAASM,EAAI,GACnBC,IAAKP,EAASQ,EAAI,IAEtBtE,eAAgBjC,M,qCAKpBzE,KAAKqD,SAAS,CACVgK,QAAS,CACL/E,QAAS,Y,8EAKA7D,G,wEACjBzE,KAAKqD,SAAS,CACVgK,QAAS,CACL/E,QAAS,U,SAGXtI,KAAKyI,QAAQ/B,eAAejC,G,uBAC5BzE,KAAKyI,QAAQ1C,e,0IAGV4C,GACT3I,KAAKqD,SAAL,eACKsF,EAAMrB,OAAOD,KAAOsB,EAAMrB,OAAOpE,U,+BAIhC,IAAD,OAEL,OACI,oCAEI,kBAACwC,EAAgB6D,SAAjB,MACK,SAACd,GAAD,OACG,oCACI,yBAAK1D,UAAU,aAAaR,MAAO,EAAK7B,MAAM2K,SAC1C,0BAAMtI,UAAU,mBAChB,0EACA,0BAAMA,UAAU,eAAeG,QAAS,kBAAM,EAAK2I,iBAAnD,KACA,4BAAQ3I,QAAS,kBAAM,EAAKwB,eAAe,EAAKhE,MAAMgE,kBAAtD,eAGJ,0BAAM3B,UAAU,iBAAgB,6CAAsB,4BAAQA,UAAU,SAASG,QAAS,SAAAyD,GAAK,OAAI,EAAKQ,UAAUR,KAAQ,uBAAG5D,UAAU,2BAAb,cAApE,mBACrD,EAAKrC,MAAMyG,UAAY,oCACpB,yBAAKpE,UAAU,SACX,yBAAKA,UAAU,eAAeG,QAAS,SAAAyD,GAAK,OAAI,EAAKQ,UAAUR,KAC3D,yBAAK5D,UAAU,gBACX,wBAAIA,UAAU,cAAd,YACA,yBAAKA,UAAW,EAAKrC,MAAMsK,MAAMC,MAAQ,GAAK,QAC1C,gDACA,2BAAOlI,UAAU,aAAa+D,KAAK,OAAOC,YAAY,qBAAqB1B,KAAK,OAAOuB,SAAU,SAAAD,GAAK,OAAI,EAAKE,aAAaF,MAC5H,2BAAO5D,UAAU,aAAa+D,KAAK,OAAOC,YAAY,wBAAwB1B,KAAK,UAAUuB,SAAU,SAAAD,GAAK,OAAI,EAAKE,aAAaF,MAClI,2BAAO5D,UAAU,aAAa+D,KAAK,OAAOC,YAAY,aAAa1B,KAAK,MAAMuB,SAAU,SAAAD,GAAK,OAAI,EAAKE,aAAaF,MACnH,2BAAO5D,UAAU,aAAa+D,KAAK,OAAOC,YAAY,qBAAqB1B,KAAK,MAAMuB,SAAU,SAAAD,GAAK,OAAI,EAAKE,aAAaF,MAC3H,8BAAU5D,UAAU,2BAA2B+D,KAAK,OAAOC,YAAY,6BAA6B1B,KAAK,cAAcuB,SAAU,SAAAD,GAAK,OAAI,EAAKE,aAAaF,OAEhK,yBAAK5D,UAAW,EAAKrC,MAAMsK,MAAME,OAAS,GAAK,QAC3C,sEACA,2BAAOnI,UAAU,aAAa+D,KAAK,OAAOC,YAAY,2BAAwB1B,KAAK,oBAAoBuB,SAAU,SAAAD,GAAK,OAAI,EAAKE,aAAaF,MAC5I,2BAAO5D,UAAU,aAAa+D,KAAK,OAAOC,YAAY,gBAAgB1B,KAAK,qBAAqBuB,SAAU,SAAAD,GAAK,OAAI,EAAKE,aAAaF,MACrI,2BAAO5D,UAAU,aAAa+D,KAAK,OAAOC,YAAY,QAAQ1B,KAAK,qBAAqBuB,SAAU,SAAAD,GAAK,OAAI,EAAKE,aAAaF,OAEjI,yBAAK5D,UAAW,EAAKrC,MAAMsK,MAAMG,MAAQ,GAAK,QAC1C,qDACA,2BAAOpI,UAAU,aAAa+D,KAAK,OAAOC,YAAY,WAAW1B,KAAK,WAAWuB,SAAU,SAAAD,GAAK,OAAI,EAAKE,aAAaF,MACtH,2BAAO5D,UAAU,aAAa+D,KAAK,OAAOC,YAAY,YAAY1B,KAAK,YAAYuB,SAAU,SAAAD,GAAK,OAAI,EAAKE,aAAaF,MACxH,2BAAO5D,UAAU,aAAa+D,KAAK,OAAOC,YAAY,WAAW1B,KAAK,WAAWuB,SAAU,SAAAD,GAAK,OAAI,EAAKE,aAAaF,MACtH,2BAAO5D,UAAU,aAAa+D,KAAK,OAAOC,YAAY,YAAY1B,KAAK,YAAYuB,SAAU,SAAAD,GAAK,OAAI,EAAKE,aAAaF,OAE5H,yBAAK5D,UAAW,EAAKrC,MAAMsK,MAAMI,OAAS,GAAK,QAC3C,oDACA,2BAAOrI,UAAU,aAAa+D,KAAK,OAAOC,YAAY,2BAAwB1B,KAAK,QAAQuB,SAAU,SAAAD,GAAK,OAAI,EAAKE,aAAaF,MAChI,2BAAO5D,UAAU,aAAa+D,KAAK,OAAOC,YAAY,WAAW1B,KAAK,YAAYuB,SAAU,SAAAD,GAAK,OAAI,EAAKE,aAAaF,MACvH,8BAAU5D,UAAU,2BAA2B+D,KAAK,OAAOC,YAAY,uBAAuB1B,KAAK,iBAAiBuB,SAAU,SAAAD,GAAK,OAAI,EAAKE,aAAaF,OAE7J,4BAAQ5D,UAAU,WAAWG,QAAS,kBAAM,EAAK4I,aAAjD,YAAmE,uBAAG9K,MAAM,kBAAT,6BAI7E,qCACN,yBAAK+B,UAAU,gBACV0D,EAAQ/F,MAAMkD,UAAUiE,KAAI,SAAAhE,GAAQ,OACjC,yBAAKd,UAAU,qBACX,yBAAKA,UAAU,gBAAe,kBAAC,IAAD,CAAMgC,GAAE,oBAAelB,EAASxB,MAAO,wBAAIU,UAAU,iBAAiBc,EAASI,UAAoB,0BAAMf,QAAS,SAACyD,GAAD,OAAW,EAAKoF,YAAYpF,EAAO9C,EAASxB,MAAMU,UAAU,kBAA3E,MACjI,yBAAKA,UAAU,eAAc,uBAAGtD,KAAMoE,EAAS/D,KAAM+D,EAAS/D,MAC9D,yBAAKiD,UAAU,gBAAgBc,EAASuG,2B,GAhKxD3G,aA6KxBqH,EAAU7D,YAAcvD,EAEToH,QCjLTkB,E,kDACF,WAAY1L,GAAQ,IAAD,8BACf,cAAMA,IACDI,MAAQ,CACTuL,gBAAiB,IAHN,E,yDASNtF,GACT3I,KAAKqD,SAAS,CACV4K,gBAAgB,2BACTjO,KAAK0C,MAAMuL,iBADH,kBAEVtF,EAAMrB,OAAOD,KAAOsB,EAAMrB,OAAOpE,Y,gCAMpCyF,GACF,eAAejI,SAASiI,EAAMrB,OAAOgC,UAAU,KAC/CtJ,KAAKsC,MAAM2H,c,iKAKTjK,KAAKyI,QAAQlC,mBAAmBvG,KAAK0C,MAAMuL,gBAAiBjO,KAAKsC,MAAMmC,I,uBACvEzE,KAAKsC,MAAM4H,S,OACjBlK,KAAKsC,MAAM6H,c,qIAGL,IAAD,OAEL,OACI,oCAEI,kBAACzE,EAAgB6D,SAAjB,MACK,SAACd,GAAD,OACG,oCACI,yBAAK1D,UAAU,iBACX,yBAAKA,UAAU,mBACX,wBAAIA,UAAU,iBAAiB0D,EAAQ/F,MAAMmD,SAASI,SACtD,0BAAMlB,UAAU,gDAAgDG,QAAS,kBAAM,EAAK5C,MAAM6H,gBAA1F,SACA,0BAAM5E,MAAM,mBAAgBR,UAAU,gDAAgDG,QAAS,kBAAM,EAAKoB,mBAA1G,QACA,4BAAI,0BAAMvB,UAAU,2BAAhB,WAAJ,qBACA,yBAAKA,UAAU,mBACX,0BAAMA,UAAU,iBAAhB,cAAiD,2BAAO6D,SAAU,SAAAD,GAAK,OAAI,EAAKE,aAAaF,IAAQ5D,UAAU,YAAYsC,KAAK,UAAU+C,aAAc3B,EAAQ/F,MAAMmD,SAASI,UAC/K,0BAAMlB,UAAU,iBAAhB,OAA0C,2BAAO6D,SAAU,SAAAD,GAAK,OAAI,EAAKE,aAAaF,IAAQ5D,UAAU,YAAYsC,KAAK,MAAM+C,aAAc3B,EAAQ/F,MAAMmD,SAASmB,MACpK,0BAAMjC,UAAU,iBAAhB,WAA8C,2BAAO6D,SAAU,SAAAD,GAAK,OAAI,EAAKE,aAAaF,IAAQ5D,UAAU,YAAYsC,KAAK,UAAU+C,aAAc3B,EAAQ/F,MAAMmD,SAASoB,UAC5K,0BAAMlC,UAAU,iBAAhB,iBAAoD,2BAAO6D,SAAU,SAAAD,GAAK,OAAI,EAAKE,aAAaF,IAAQ5D,UAAU,YAAYsC,KAAK,oBAAoB+C,aAAc3B,EAAQ/F,MAAMmD,SAASqB,oBAC5L,0BAAMnC,UAAU,iBAAhB,yBAA4D,2BAAO6D,SAAU,SAAAD,GAAK,OAAI,EAAKE,aAAaF,IAAQ5D,UAAU,YAAYsC,KAAK,qBAAqB+C,aAAc3B,EAAQ/F,MAAMmD,SAASsB,qBACrM,0BAAMpC,UAAU,iBAAhB,uBAA0D,2BAAO6D,SAAU,SAAAD,GAAK,OAAI,EAAKE,aAAaF,IAAQ5D,UAAU,YAAYsC,KAAK,qBAAqB+C,aAAc3B,EAAQ/F,MAAMmD,SAASuB,qBACnM,0BAAMrC,UAAU,iBAAhB,cAAiD,2BAAO6D,SAAU,SAAAD,GAAK,OAAI,EAAKE,aAAaF,IAAQ5D,UAAU,YAAYsC,KAAK,MAAM+C,aAAc3B,EAAQ/F,MAAMmD,SAAS/D,QAInL,yBAAKiD,UAAU,eACX,6BACI,mDACA,yBAAKA,UAAU,mBACX,0BAAMA,UAAU,iBAAhB,eAAkD,2BAAO6D,SAAU,SAAAD,GAAK,OAAI,EAAKE,aAAaF,IAAQ5D,UAAU,YAAYsC,KAAK,QAAQ+C,aAAc3B,EAAQ/F,MAAMmD,SAAS6H,QAC9K,0BAAM3I,UAAU,iBAAhB,YAA+C,2BAAO6D,SAAU,SAAAD,GAAK,OAAI,EAAKE,aAAaF,IAAQ5D,UAAU,YAAYsC,KAAK,YAAY+C,aAAc3B,EAAQ/F,MAAMmD,SAAS8H,YAC/K,0BAAM5I,UAAU,iBAAhB,sBAAsD,8BAAO0D,EAAQ/F,MAAMmD,SAAS8H,UAAYlF,EAAQ/F,MAAMmD,SAAS6H,MAAjE,oBAI9D,6BACI,8CACA,yBAAK3I,UAAU,mBACX,0BAAMA,UAAU,iBAAhB,YAA+C,2BAAO6D,SAAU,SAAAD,GAAK,OAAI,EAAKE,aAAaF,IAAQ5D,UAAU,YAAYsC,KAAK,WAAW+C,aAAc3B,EAAQ/F,MAAMmD,SAASyH,WAC9K,0BAAMvI,UAAU,iBAAhB,aAAgD,2BAAO6D,SAAU,SAAAD,GAAK,OAAI,EAAKE,aAAaF,IAAQ5D,UAAU,YAAYsC,KAAK,YAAY+C,aAAc3B,EAAQ/F,MAAMmD,SAAS0H,YAChL,0BAAMxI,UAAU,iBAAhB,YAA+C,2BAAO6D,SAAU,SAAAD,GAAK,OAAI,EAAKE,aAAaF,IAAQ5D,UAAU,YAAYsC,KAAK,WAAW+C,aAAc3B,EAAQ/F,MAAMmD,SAAS2H,WAC9K,0BAAMzI,UAAU,iBAAhB,aAAgD,2BAAO6D,SAAU,SAAAD,GAAK,OAAI,EAAKE,aAAaF,IAAQ5D,UAAU,YAAYsC,KAAK,YAAY+C,aAAc3B,EAAQ/F,MAAMmD,SAAS4H,yB,GAzEjMhI,aAwF3BuI,EAAa/E,YAAcvD,EAEZsI,QCtFTE,E,kDACF,WAAY5L,GAAQ,IAAD,8BACf,cAAMA,IACDI,MAAQ,CACT+D,QAAS,KACTlC,MAAO,CACH+D,QAAS,QAEb6F,QAAS,CACL7F,QAAS,SARF,E,0LAcTtI,KAAKyI,QAAQ1C,e,uBACb/F,KAAKyI,QAAQzC,YAAYhG,KAAKsC,MAAMmC,I,qQAIpCzE,KAAKyI,QAAQ1C,e,uBACb/F,KAAKyI,QAAQzC,YAAYhG,KAAKsC,MAAMmC,I,yIAGjCkE,GACT3I,KAAKqD,SAAL,eACKsF,EAAMrB,OAAOD,KAAOsB,EAAMrB,OAAOpE,U,0EAIzBuF,G,0EACc,OAAvBzI,KAAK0C,MAAM+D,Q,uBACPA,EAAU,CACVA,QAASzG,KAAK0C,MAAM+D,QACpBxG,SAAUwI,EAAQxI,SAClBuE,SAAUiE,EAAQjE,SAClBV,KAAM1C,KAAKC,MACXgE,SAAUoD,EAAQpD,U,SAEhBrF,KAAKyI,QAAQjC,WAAWxG,KAAKyI,QAAQ/F,MAAMmD,SAASxB,IAAKoC,G,cAC/DiF,SAAS0C,cAAc,iBAAiBlL,MAAQ,G,SAC1ClD,KAAKyI,QAAQ1C,e,uBACb/F,KAAKyI,QAAQzC,YAAYhG,KAAKsC,MAAMmC,I,0IAIrCkE,GACT,IAAI6B,EAAW7B,EAAM8B,cAAcC,wBACnC/B,EAAMH,iBACNxI,KAAKqD,SAAS,CACVsH,SAAUhC,EAAM8B,cAAcG,YAC9BrG,MAAO,CACHiG,SAAU,WACVK,KAAML,EAASM,EACfC,IAAKP,EAASQ,EAAI,GAEtBC,QAAS,CACLC,MAAO,QACPC,OAAQ,QACRJ,IAAK,EACLF,KAAM,EACNL,SAAU,SAEdY,YAAa,CACT/D,KAAMsB,EAAMrB,OAAO+D,aAAa,QAChC5G,GAAIzE,KAAKyI,QAAQ/F,MAAMmD,SAASxB,IAChCiH,SAAU,Q,kCAKV3C,GACR3I,KAAKqD,SAAS,CACV+H,YAAY,2BACLpL,KAAK0C,MAAM0I,aADP,IAEPE,SAAU3C,EAAMrB,OAAOpE,Y,kFAKVyF,G,wEACrBA,EAAMH,iB,SAEAxI,KAAKyI,QAAQnC,eAAetG,KAAK0C,MAAM0I,a,uBACvCpL,KAAKyI,QAAQ1C,e,uBACb/F,KAAKyI,QAAQzC,YAAYhG,KAAKsC,MAAMmC,I,OAE1CzE,KAAKqD,SAAS,CACVkB,MAAO,CAAE+D,QAAS,UAGtBoD,SAASC,eAAe,kBAAkBzI,MAAQ,G,uIAG5CyF,GAEFA,EAAMrB,SAAWoE,SAASE,uBAAuB,wBAAwB,IACzE5L,KAAKqD,SAAS,CACV4H,QAAS,CACL3C,QAAS,Y,6EAML1B,EAAWC,G,iFACrB7G,KAAKyI,QAAQ9B,cAAcC,EAAWC,G,uBACtC7G,KAAKyI,QAAQ1C,e,uBACb/F,KAAKyI,QAAQzC,YAAYhG,KAAKsC,MAAMmC,I,2IAI1CzE,KAAKqD,SAAS,CACVwI,WAAW,EACXC,YAAa,CACTxD,QAAS,Y,oCAMjBtI,KAAKqD,SAAS,CACVwI,WAAW,EACXC,YAAa,CACTxD,QAAS,Y,+BAKX,IAAD,OAEL,OACI,oCACI,kBAAC5C,EAAgB6D,SAAjB,MACK,SAACd,GAAD,OACG,oCACI,yBAAK1D,UAAU,UAAUR,MAAO,EAAK7B,MAAMyL,SACvC,0BAAMpJ,UAAU,mBAChB,2IACA,0BAAMA,UAAU,eAAeG,QAAS,kBAAM,EAAKmJ,iBAAnD,MAGJ,yBAAKtJ,UAAU,uBAAuBR,MAAO,EAAK7B,MAAMuI,QAAS/F,QAAS,SAACyD,GAAD,OAAW,EAAK+D,UAAU/D,KAChG,yBAAK5D,UAAU,gBAAgBR,MAAO,EAAK7B,MAAM6B,OAC7C,yBAAKQ,UAAU,eACX,8BACI,2BAAON,GAAG,iBAAiBsE,YAAa,EAAKrG,MAAMiI,SAAU7B,KAAK,OAAOsB,aAAc,EAAK1H,MAAMiK,KAAM/D,SAAU,SAACD,GAAD,OAAW,EAAKiE,YAAYjE,MAC9I,4BAAQG,KAAK,SAAS5D,QAAS,SAACyD,GAAD,OAAW,EAAKkE,mBAAmBlE,KAAlE,WAMf,EAAKjG,MAAMmJ,UACR,kBAAC,EAAD,CACIpH,GAAI,EAAKnC,MAAMmC,GACf0F,YAAa,kBAAM,EAAKA,eACxBD,OAAQ,kBAAM,EAAKuB,kBACL,qCAEtB,yBAAK1G,UAAU,gBAAgBR,MAAO,EAAK7B,MAAMoJ,aAC7C,yBAAK/G,UAAU,mBACX,wBAAIA,UAAU,iBAAiB0D,EAAQ/F,MAAMmD,SAASI,SACtD,0BAAMlB,UAAU,kCAAkCG,QAAS,SAACyD,GAAD,OAAW,EAAKkD,UAAUlD,KAArF,YAEA,yBAAK5D,UAAU,eAAc,0BAAMA,UAAU,wCAAhB,eAAyE,uBAAGtD,KAAMgH,EAAQ/F,MAAMmD,SAAS/D,KAAhC,IAAuC2G,EAAQ/F,MAAMmD,SAAS/D,MACpK,4BAAI,0BAAMiD,UAAU,2BAAhB,WAAJ,qBACA,yBAAKA,UAAU,mBACX,0BAAMA,UAAU,iBAAhB,cAAiD,0BAAMA,UAAU,OAAOsC,KAAK,UAAU0E,cAAe,SAAApD,GAAK,OAAI,EAAK2F,aAAa3F,KAASF,EAAQ/F,MAAMmD,SAASI,SACjK,0BAAMlB,UAAU,iBAAhB,OAA0C,0BAAMA,UAAU,OAAOsC,KAAK,MAAM0E,cAAe,SAAApD,GAAK,OAAI,EAAK2F,aAAa3F,KAASF,EAAQ/F,MAAMmD,SAASmB,KACtJ,0BAAMjC,UAAU,iBAAhB,WAA8C,0BAAMA,UAAU,OAAOsC,KAAK,UAAU0E,cAAe,SAAApD,GAAK,OAAI,EAAK2F,aAAa3F,KAASF,EAAQ/F,MAAMmD,SAASoB,SAC9J,0BAAMlC,UAAU,iBAAhB,iBAAoD,0BAAMA,UAAU,OAAOsC,KAAK,oBAAoB0E,cAAe,SAAApD,GAAK,OAAI,EAAK2F,aAAa3F,KAASF,EAAQ/F,MAAMmD,SAASqB,mBAC9K,0BAAMnC,UAAU,iBAAhB,yBAA4D,0BAAMA,UAAU,QAAO,uBAAGsC,KAAK,qBAAqB0E,cAAe,SAAApD,GAAK,OAAI,EAAK2F,aAAa3F,IAAQlH,KAAI,cAASgH,EAAQ/F,MAAMmD,SAASsB,qBAAuBsB,EAAQ/F,MAAMmD,SAASsB,qBACpP,0BAAMpC,UAAU,iBAAhB,uBAA0D,0BAAMA,UAAU,QAAO,uBAAGsC,KAAK,qBAAqB0E,cAAe,SAAApD,GAAK,OAAI,EAAK2F,aAAa3F,IAAQlH,KAAI,iBAAYgH,EAAQ/F,MAAMmD,SAASuB,qBAAuBqB,EAAQ/F,MAAMmD,SAASuB,qBACrP,0BAAMrC,UAAU,iBAAhB,cAAiD,0BAAMA,UAAU,QAAO,uBAAGsC,KAAK,MAAM0E,cAAe,SAAApD,GAAK,OAAI,EAAK2F,aAAa3F,IAAQrB,OAAO,SAASC,IAAI,sBAAsB9F,KAAMgH,EAAQ/F,MAAMmD,SAAS/D,KAAM2G,EAAQ/F,MAAMmD,SAAS/D,QAIpP,yBAAKiD,UAAU,eACX,6BACI,mDACA,yBAAKA,UAAU,mBACX,0BAAMA,UAAU,iBAAhB,eAAkD,0BAAMA,UAAU,OAAOsC,KAAK,QAAQ0E,cAAe,SAAApD,GAAK,OAAI,EAAK2F,aAAa3F,KAASF,EAAQ/F,MAAMmD,SAAS6H,OAChK,0BAAM3I,UAAU,iBAAhB,YAA+C,0BAAMA,UAAU,OAAOsC,KAAK,YAAY0E,cAAe,SAAApD,GAAK,OAAI,EAAK2F,aAAa3F,KAASF,EAAQ/F,MAAMmD,SAAS8H,WACjK,0BAAM5I,UAAU,iBAAhB,sBAAsD,8BAAO0D,EAAQ/F,MAAMmD,SAAS8H,UAAYlF,EAAQ/F,MAAMmD,SAAS6H,MAAjE,oBAI9D,6BACI,8CACA,yBAAK3I,UAAU,mBACX,0BAAMA,UAAU,iBAAhB,YAA+C,0BAAMA,UAAU,QAAO,uBAAGsC,KAAK,WAAW0E,cAAe,SAAApD,GAAK,OAAI,EAAK2F,aAAa3F,IAAQrB,OAAO,SAASC,IAAI,sBAAsB9F,KAAMgH,EAAQ/F,MAAMmD,SAASyH,UAAW7E,EAAQ/F,MAAMmD,SAASyH,WACpP,0BAAMvI,UAAU,iBAAhB,aAAgD,0BAAMA,UAAU,QAAO,uBAAGsC,KAAK,YAAY0E,cAAe,SAAApD,GAAK,OAAI,EAAK2F,aAAa3F,IAAQrB,OAAO,SAASC,IAAI,sBAAsB9F,KAAMgH,EAAQ/F,MAAMmD,SAAS0H,WAAY9E,EAAQ/F,MAAMmD,SAAS0H,YACvP,0BAAMxI,UAAU,iBAAhB,YAA+C,0BAAMA,UAAU,QAAO,uBAAGsC,KAAK,WAAW0E,cAAe,SAAApD,GAAK,OAAI,EAAK2F,aAAa3F,IAAQrB,OAAO,SAASC,IAAI,sBAAsB9F,KAAMgH,EAAQ/F,MAAMmD,SAAS2H,UAAW/E,EAAQ/F,MAAMmD,SAAS2H,WACpP,0BAAMzI,UAAU,iBAAhB,aAAgD,0BAAMA,UAAU,QAAO,uBAAGsC,KAAK,YAAY0E,cAAe,SAAApD,GAAK,OAAI,EAAK2F,aAAa3F,IAAQrB,OAAO,SAASC,IAAI,sBAAsB9F,KAAMgH,EAAQ/F,MAAMmD,SAAS4H,WAAYhF,EAAQ/F,MAAMmD,SAAS4H,gBAOvQ,kBAACvL,EAAYqH,SAAb,MACK,SAACd,GAAD,OACG,yCAAI,mDACA,yBAAK1D,UAAU,uBACX,yBAAKO,IAAI,qBAAqBF,IAAKqD,EAAQ/F,MAAMI,aAAauC,SAAUN,UAAU,kBAClF,8BAAUA,UAAU,eAAe+D,KAAK,OAAOC,YAAY,qBAAqB1B,KAAK,UAAUuB,SAAU,SAAAD,GAAK,OAAI,EAAKE,aAAaF,MACpI,4BAAQ5D,UAAU,aAAaG,QAAS,kBAAM,EAAKsB,WAAWiC,EAAQ/F,MAAMI,gBAA5E,4BAKhB,yBAAKiC,UAAU,eACX,2CACC0D,EAAQ/F,MAAMmD,SAASC,SAAS+D,KAAI,SAAApD,GAAO,OACxC,yBAAK1B,UAAU,oBACX,yBAAKA,UAAU,iBACX,0BAAMR,MAAO,CAACS,MAAO,QAASC,OAAQ,WAAYC,QAAS,kBAAM,EAAKyB,cAAcF,EAAQpC,IAAKoE,EAAQ/F,MAAMmD,SAASxB,OAAxH,KACA,yBAAKU,UAAU,cAAa,yBAAKO,IAAI,qBAAqBF,IAAKqB,EAAQpB,YACvE,0BAAMN,UAAU,eAAe0B,EAAQjC,UACvC,0BAAMO,UAAU,eAAesF,IAAO5D,EAAQ3C,MAAM2I,WACpD,yBAAK1H,UAAU,kBAAkB0B,EAAQA,wB,GA7N9DhB,aA0OvByI,EAASjF,YAAcvD,EAERwI,Q,QChPTK,E,kDACF,WAAYjM,GAAQ,IAAD,8BACf,cAAMA,IACDI,MAAQ,CACTC,MAAO,IAHI,E,0LAQT3C,KAAKyI,QAAQjF,W,yIAGVmF,GAAQ,IAAD,OAChB3I,KAAKqD,SAAL,aACIkB,MAAO,CAAE+D,QAAS,UACjBK,EAAMrB,OAAOD,KAAOsB,EAAMrB,OAAOpE,QACnC,WACC,IAAIP,EAAQ,EAAK8F,QAAQ/F,MAAMC,MAAM6L,QAAO,SAAA5L,GAAI,OAC5CA,EAAK4B,SAAS9D,SAAS,EAAKgC,MAAME,OAClC,EAAKN,MAAMsF,KAAKiC,KAAI,SAAAqC,GAAC,OAAIA,EAAE7H,OAAKoK,QAAQ7L,EAAKyB,KAAO,KACxD,EAAKhB,SAAS,CAACV,MAAOA,S,wCAK1B3C,KAAKqD,SAAS,CAACkB,MAAO,CAAC+D,QAAS,UAChCoD,SAASC,eAAe,UAAUzI,MAAQ,M,+BAGpC,IAAD,OAEDwL,EAAU1O,KAAK0C,MAAMC,MAAMkH,KAAI,SAAAjH,GAAI,OACnC,yBAAKmC,UAAU,aAAaR,MAAO,EAAK7B,MAAM6B,MAAOW,QAAS,WAAQ,EAAK5C,MAAMqM,WAAW/L,GAAO,EAAKgM,oBACpG,yBAAK7J,UAAU,gBAAgBO,IAAI,GAAGF,IAAKxC,EAAKyC,WAChD,0BAAMN,UAAU,kBAAkBnC,EAAK4B,UACvC,0BAAMO,UAAU,mBAAhB,MAAsCnC,EAAK2C,WAG/CsJ,EAAW7O,KAAKsC,MAAMsF,KAAKiC,KAAI,SAAAqC,GAAC,OAAI,yBAAK5G,IAAI,GAAGP,UAAU,cAAcK,IAAK8G,EAAE7G,SAAUH,QAAS,WAAQ,EAAK5C,MAAM6C,eAAe+G,EAAE7H,WAE1I,OACI,oCACI,yBAAKU,UAAU,kBACX,2BAAO+J,aAAa,MAAMrK,GAAG,SAASM,UAAU,kBAAkB+D,KAAK,OAAOC,YAAY,2BAA2B1B,KAAK,OAAOuB,SAAU,SAAAD,GAAK,OAAI,EAAKE,aAAaF,MACtK,0BAAM5D,UAAU,gBAAgB8J,IAEpC,yBAAK9J,UAAU,uBAAuB2J,Q,GA9C3BjJ,aAoD3B8I,EAAatF,YAAc/G,EAEZqM,QCtDTQ,E,kDACF,WAAYzM,GAAQ,IAAD,8BACf,cAAMA,IACDI,MAAQ,CACTmD,SAAU,GACVtB,MAAO,CACH+D,QAAS,SALF,E,0LAWTtI,KAAKyI,QAAQ1C,e,yIAGV4C,GAAQ,IAAD,OAChB3I,KAAKqD,SAAL,aACIkB,MAAO,CAAE+D,QAAS,UACjBK,EAAMrB,OAAOD,KAAOsB,EAAMrB,OAAOpE,QACnC,WACC,IAAI2C,EAAW,EAAK4C,QAAQ/F,MAAMkD,UAAUzB,MAAK,SAAAoI,GAAC,OAAIA,EAAEtG,QAAQvF,SAAS,EAAKgC,MAAMuD,YAChFJ,EACA,EAAKxC,SAAS,CAAEwC,SAAUA,IAE1B,EAAKxC,SAAS,CAAEwC,SAAU,CAACI,QAAS,2B,sCAMhC0C,EAAOlE,GACnBzE,KAAKsC,MAAM0M,YAAYvK,GACvB,IAAIvB,EAAQyF,EAAM8B,cAAc2D,cAAc,QAAQa,UACtDvD,SAASC,eAAe,WAAWzI,MAAQA,EAC3ClD,KAAKqD,SAAS,CAAEkB,MAAO,CAAE+D,QAAS,Y,+BAG5B,IAAD,OAEL,OACI,oCACI,yBAAKvD,UAAU,kBACX,2BAAON,GAAG,UAAUqK,aAAa,MAAM/J,UAAU,kBAAkB+D,KAAK,OAAOC,YAAY,eAAe1B,KAAK,UAAUuB,SAAU,SAAAD,GAAK,OAAI,EAAKE,aAAaF,OAElK,yBAAK5D,UAAU,uBACX,yBAAKA,UAAU,aAAaR,MAAOvE,KAAK0C,MAAM6B,MAAOW,QAAS,SAACyD,GAAY,EAAKiG,gBAAgBjG,EAAO,EAAKjG,MAAMmD,SAASxB,OACvH,0BAAMU,UAAU,kBAAkB/E,KAAK0C,MAAMmD,SAASI,gB,GA9C3CR,aAsDnCsJ,EAAqB9F,YAAcvD,EAEpBqJ,QCnDTG,E,kDACF,WAAY5M,GAAQ,IAAD,8BACf,cAAMA,IACDI,MAAQ,CACTyG,WAAW,EACXvB,KAAM,GACNyF,QAAS,CACL/E,QAAS,QAEbF,SAAU,CACNE,QAAS,SATF,E,0LAeTtI,KAAKyI,QAAQZ,c,wIAGX/D,GACR,QAAagB,IAAThB,EAAoB,CACpB,IAAIyH,EAAWlB,IAAOvG,GAAM0H,KAAKnB,MAAU,QAE3C,GAAIkB,EAAW,EAAK,OAAQ,0BAAMxG,UAAU,gBAAhB,oBAA4D,EAAZwG,EAAhD,SACvB,GAAIA,EAAW,GAAKA,EAAW,GAAM,OAAQ,0BAAMxG,UAAU,gBAAgBwG,EAAhC,sBAC7C,GAAIA,EAAW,GAAM,OAAQ,0BAAMxG,UAAU,gBAAgBwG,EAAhC,yB,iCAI/B3I,GACP5C,KAAKqD,SAAS,CACVuE,KAAK,GAAD,mBAAM5H,KAAK0C,MAAMkF,MAAjB,CAAuBhF,Q,kCAIvB6B,GACRzE,KAAKqD,SAAS,CACVwC,SAAUpB,M,qCAIHA,GACX,IAAI9B,EAAQ3C,KAAK0C,MAAMkF,KAAK4G,QAAO,SAAA5L,GAAI,OAAIA,EAAKyB,MAAQI,KACxDzE,KAAKqD,SAAS,CACVuE,KAAMjF,M,mCAIDgG,GACT3I,KAAKqD,SAAL,eACKsF,EAAMrB,OAAOD,KAAOsB,EAAMrB,OAAOpE,U,8JAKX4B,IAAxB9E,KAAK0C,MAAMmD,S,uBACNsJ,EAAa,CACblJ,QAASjG,KAAK0C,MAAMmD,SACpBuG,YAAapM,KAAK0C,MAAM0J,YACxBb,SAAUvL,KAAK0C,MAAM6I,SACrB3D,KAAM5H,KAAK0C,MAAMkF,KACjB9D,KAAM1C,KAAKC,MACX8K,YAAanM,KAAK0C,MAAMyJ,a,SAGtBnM,KAAKyI,QAAQV,WAAWoH,G,cAC9BnP,KAAKqD,SAAS,CAAE8F,WAAYnJ,KAAK0C,MAAMyG,Y,SACjCnJ,KAAKyI,QAAQZ,c,8BAEnB7H,KAAKqD,SAAS,CACV+E,SAAU,CACNE,QAAS,W,uIAMfK,GACF,CAAC,SAAU,gBAAgBjI,SAASiI,EAAMrB,OAAOgC,UAAU,KAC3DtJ,KAAKqD,SAAS,CAAE8F,WAAYnJ,KAAK0C,MAAMyG,c,kCAKnCR,EAAOlE,GACf,IAAI+F,EAAW7B,EAAMrB,OAAOoD,wBAC5B1K,KAAKqD,SAAS,CACVgK,QAAS,CACLxC,KAAML,EAASM,EAAI,GACnBC,IAAKP,EAASQ,EAAI,IAEtBhD,cAAevD,M,qCAKnBzE,KAAKqD,SAAS,CACVgK,QAAS,CACL/E,QAAS,Y,6EAKD7D,G,wEAChBzE,KAAKqD,SAAS,CACVgK,QAAS,CACL/E,QAAS,U,SAGXtI,KAAKyI,QAAQT,cAAcvD,G,uBAC3BzE,KAAKyI,QAAQZ,c,sIAIb,IAAD,OAEL,OACI,oCACI,0BAAM9C,UAAU,iBAAgB,+CAAwB,4BAAQA,UAAU,SAASG,QAAS,SAAAyD,GAAK,OAAI,EAAKQ,UAAUR,KAAQ,uBAAG5D,UAAU,2BAAb,gBAApE,sBACxD,kBAACyC,EAAe+B,SAAhB,MACK,SAACd,GAAD,OACG,oCACI,yBAAK1D,UAAU,aAAaR,MAAO,EAAK7B,MAAM2K,SAC1C,0BAAMtI,UAAU,mBAChB,4EACA,0BAAMA,UAAU,eAAeG,QAAS,kBAAM,EAAK2I,iBAAnD,KACA,4BAAQ3I,QAAS,kBAAM,EAAK8C,cAAc,EAAKtF,MAAMsF,iBAArD,iBAGH,EAAKtF,MAAMyG,UAAY,oCACpB,yBAAKpE,UAAU,SACX,yBAAKA,UAAU,eAAeG,QAAS,SAAAyD,GAAK,OAAI,EAAKQ,UAAUR,KAC3D,yBAAK5D,UAAU,gBACX,wBAAIA,UAAU,cAAd,eACA,yBAAKR,MAAO,EAAK7B,MAAM0F,SAAUrD,UAAU,mBAC3C,0BAAMA,UAAU,kBAAhB,iBACA,+DAEA,6BACI,kBAAC,EAAD,CAAsBiK,YAAa,SAACvK,GAAD,OAAQ,EAAKuK,YAAYvK,MAC5D,2BAAOM,UAAU,aAAa+D,KAAK,OAAOC,YAAY,oBAAoB1B,KAAK,cAAcuB,SAAU,SAAAD,GAAK,OAAI,EAAKE,aAAaF,MAClI,2BAAO5D,UAAU,aAAa+D,KAAK,OAAOC,YAAY,WAAW1B,KAAK,WAAWuB,SAAU,SAAAD,GAAK,OAAI,EAAKE,aAAaF,MACtH,kBAAC,EAAD,CACIgG,WAAY,SAAClK,GAAD,OAAQ,EAAKkK,WAAWlK,IACpCU,eAAgB,SAACV,GAAD,OAAQ,EAAKU,eAAeV,IAC5CmD,KAAM,EAAKlF,MAAMkF,OAErB,8BAAU7C,UAAU,2BAA2B+D,KAAK,OAAOC,YAAY,oBAAoB1B,KAAK,cAAcuB,SAAU,SAAAD,GAAK,OAAI,EAAKE,aAAaF,OAEvJ,4BAAQ5D,UAAU,WAAWG,QAAS,kBAAM,EAAKkK,kBAAjD,SAAwE,uBAAGrK,UAAU,kBAAb,0BAIlF,qCAEN,yBAAKA,UAAU,gBACV0D,EAAQ/F,MAAMgF,SAASmC,KAAI,SAAAlC,GAAO,OAC/B,yBAAK5C,UAAU,qBACX,yBAAKA,UAAU,gBAAe,kBAAC,IAAD,CAAMgC,GAAE,mBAAcY,EAAQtD,MAAO,wBAAIU,UAAU,iBAAiB4C,EAAQwE,cAAwB,0BAAMjH,QAAS,SAACyD,GAAD,OAAW,EAAKoF,YAAYpF,EAAOhB,EAAQtD,MAAMU,UAAU,kBAA1E,MAClI,yBAAKA,UAAU,gBAAgB4C,EAAQyE,aACvC,yBAAKrH,UAAU,eAAc,8BAAO,EAAKsH,YAAY1E,EAAQ4D,WAA7D,IAAgF5D,EAAQC,KAAKiC,KAAI,SAAAqC,GAAC,OAAI,yBAAK5G,IAAI,GAAGP,UAAU,qBAAqBQ,MAAO2G,EAAE1H,SAAUY,IAAK8G,EAAE7G,6B,GAhK5LI,aA4KvByJ,EAASjG,YAAczB,EAER0H,QClLTG,E,kDACF,WAAY/M,GAAQ,IAAD,8BACf,cAAMA,IACDI,MAAQ,CACTsH,eAAgB,CACZmC,YAAa,EAAK7J,MAAM6J,YACxBC,YAAa,EAAK9J,MAAM8J,YACxBb,SAAU,EAAKjJ,MAAMiJ,SACrB3K,OAAQ,EAAK0B,MAAM1B,SAPZ,E,yDAYN+H,GACT3I,KAAKqD,SAAS,CACV2G,eAAe,2BACRhK,KAAK0C,MAAMsH,gBADJ,kBAETrB,EAAMrB,OAAOD,KAAOsB,EAAMrB,OAAOpE,Y,gCAMpCyF,GACF,eAAejI,SAASiI,EAAMrB,OAAOgC,UAAU,KAC/CtJ,KAAKsC,MAAM2H,c,gKAKTjK,KAAKyI,QAAQR,cAAcjI,KAAK0C,MAAMsH,eAAgBhK,KAAKsC,MAAMmC,I,uBACjEzE,KAAKsC,MAAM4H,S,OACjBlK,KAAKsC,MAAM6H,c,qIAGL,IAAD,OAEL,OACI,oCAEI,kBAAC3C,EAAe+B,SAAhB,MACK,SAACd,GAAD,OACG,oCACI,yBAAK1D,UAAU,kBAAkBR,MAAO,EAAK7B,MAAMoJ,aAC/C,wBAAI/G,UAAU,2BAAd,sBACA,0BAAMA,UAAU,gDAAgDG,QAAS,kBAAM,EAAK5C,MAAM6H,gBAA1F,SACA,0BAAM5E,MAAM,mBAAgBR,UAAU,gDAAgDG,QAAS,kBAAM,EAAK+C,kBAA1G,QACA,yBAAKlD,UAAU,mBACX,0BAAMA,UAAU,iBAAhB,eAAkD,2BAAO6D,SAAU,SAAAD,GAAK,OAAI,EAAKE,aAAaF,IAAQ5D,UAAU,aAAasC,KAAK,cAAc+C,aAAc3B,EAAQ/F,MAAMiF,QAAQwE,cACpL,0BAAMpH,UAAU,iBAAhB,eAAkD,8BAAU6D,SAAU,SAAAD,GAAK,OAAI,EAAKE,aAAaF,IAAQ5D,UAAU,gCAAgCsC,KAAK,cAAc+C,aAAc3B,EAAQ/F,MAAMiF,QAAQyE,cAC1M,0BAAMrH,UAAU,iBAAhB,YAA+C,2BAAO6D,SAAU,SAAAD,GAAK,OAAI,EAAKE,aAAaF,IAAQG,KAAK,OAAO/D,UAAU,aAAasC,KAAK,WAAW+C,aAAc3B,EAAQ/F,MAAMiF,QAAQ4D,WAC1L,0BAAMxG,UAAU,iBAAhB,UAA6C,4BAAQ6D,SAAU,SAAAD,GAAK,OAAI,EAAKE,aAAaF,IAAQtB,KAAK,SAAStC,UAAU,eAAc,+CAAyB,4CAAyB,+D,GAnDpMU,aA8D1B4J,EAAYpG,YAAczB,EAEX6H,QC3DTH,E,kDACF,WAAY5M,GAAQ,IAAD,8BACf,cAAMA,IACDI,MAAQ,CACTkF,KAAM,GACN0H,SAAU,CACNhH,QAAS,QAEbiH,QAAS,wBACThL,MAAO,CACH+D,QAAS,SATF,E,0LAeTtI,KAAKyI,QAAQZ,c,uBACb7H,KAAKyI,QAAQX,WAAW9H,KAAKsC,MAAMmC,I,qQAInCzE,KAAKyI,QAAQZ,c,uBACb7H,KAAKyI,QAAQX,WAAW9H,KAAKsC,MAAMmC,I,wIAGjCX,GACR,QAAagB,IAAThB,EAAoB,CACpB,IAAIyH,EAAWlB,IAAOvG,GAAM0H,KAAKnB,MAAU,QAE3C,GAAIkB,EAAW,EAAK,OAAQ,0BAAMxG,UAAU,gBAAhB,oBAA4D,EAAZwG,EAAhD,SACvB,GAAIA,EAAW,GAAKA,EAAW,GAAM,OAAQ,0BAAMxG,UAAU,gBAAgBwG,EAAhC,sBAC7C,GAAIA,EAAW,GAAM,OAAQ,0BAAMxG,UAAU,gBAAgBwG,EAAhC,yB,mCAI7B5C,GACT3I,KAAKqD,SAAL,eACKsF,EAAMrB,OAAOD,KAAOsB,EAAMrB,OAAOpE,U,0EAIzBuF,G,0EACc,OAAvBzI,KAAK0C,MAAM+D,Q,uBACPA,EAAU,CACVA,QAASzG,KAAK0C,MAAM+D,QACpBxG,SAAUwI,EAAQxI,SAClBuE,SAAUiE,EAAQjE,SAClBV,KAAM1C,KAAKC,MACXgE,SAAUoD,EAAQpD,U,SAEhBrF,KAAKyI,QAAQjC,WAAWxG,KAAKyI,QAAQ/F,MAAMiF,QAAQtD,IAAKoC,G,cAC9DiF,SAAS0C,cAAc,iBAAiBlL,MAAQ,G,SAC1ClD,KAAKyL,e,oLAIC7E,EAAWC,G,iFACrB7G,KAAKyI,QAAQ9B,cAAcC,EAAWC,G,uBACtC7G,KAAKyL,e,8IAIXzL,KAAKqD,SAAS,CACVmM,UAAW,CACPlH,QAAS,QAEbiH,QAAS,0D,yEAID3M,G,iFACN5C,KAAKyI,QAAQP,iBAAiBtF,EAAM5C,KAAKsC,MAAMmC,I,uBAC/CzE,KAAKyL,e,qLAGM7G,EAAKC,G,iFAChB7E,KAAKyI,QAAQtD,eAAeP,EAAKC,G,uBACjC7E,KAAKyL,e,2IAIXzL,KAAKqD,SAAS,CACVwI,WAAW,EACXC,YAAa,CACTxD,QAAS,Y,oCAMjBtI,KAAKqD,SAAS,CACVwI,WAAW,EACXC,YAAa,CACTxD,QAAS,a,+BAMX,IAAD,OAEL,OACI,oCAEI,kBAACd,EAAe+B,SAAhB,MACK,SAACd,GAAD,OACG,oCACI,yBAAK1D,UAAU,iBAEV,EAAKrC,MAAMmJ,UACR,kBAAC,EAAD,CACIpH,GAAI,EAAKnC,MAAMmC,GACf0H,YAAa1D,EAAQ/F,MAAMiF,QAAQwE,YACnCC,YAAa3D,EAAQ/F,MAAMiF,QAAQyE,YACnCxL,OAAQ6H,EAAQ/F,MAAMiF,QAAQ/G,OAC9B2K,SAAU9C,EAAQ/F,MAAMiF,QAAQ4D,SAChCpB,YAAa,kBAAM,EAAKA,eACxBD,OAAQ,kBAAM,EAAKuB,kBACN,qCAErB,yBAAK1G,UAAU,kBAAkBR,MAAO,EAAK7B,MAAMoJ,aAC/C,wBAAI/G,UAAU,2BAAd,sBACA,0BAAMA,UAAU,kCAAkCG,QAAS,SAACyD,GAAD,OAAW,EAAKkD,UAAUlD,KAArF,YACA,yBAAK5D,UAAU,mBACX,0BAAMA,UAAU,iBAAhB,eAAkD,0BAAMA,UAAU,OAAOsC,KAAK,eAAeoB,EAAQ/F,MAAMiF,QAAQwE,aACnH,0BAAMpH,UAAU,iBAAhB,eAAkD,0BAAMA,UAAU,iBAAiBsC,KAAK,eAAeoB,EAAQ/F,MAAMiF,QAAQyE,aAC7H,0BAAMrH,UAAU,iBAAhB,YAA+C,0BAAMA,UAAU,OAAOsC,KAAK,eAAeoB,EAAQ/F,MAAMiF,QAAQ4D,UAChH,0BAAMxG,UAAU,iBAAhB,qBAAwD,0BAAMsC,KAAK,eAAe,EAAKgF,YAAY5D,EAAQ/F,MAAMiF,QAAQ4D,WACzH,0BAAMxG,UAAU,iBAAhB,UAA6C,0BAAMA,UAAU,OAAOsC,KAAK,eAAeoB,EAAQ/F,MAAMiF,QAAQ/G,UAItH,kBAAC8E,EAAgB6D,SAAjB,MACK,SAAC1D,GAAD,OACG,oCACKA,EAASiB,gBAAgB2B,EAAQ/F,MAAMiF,QAAQ1B,cAMhE,kBAAC/D,EAAYqH,SAAb,MACK,SAAC3G,GAAD,OACG,oCACI,oCACA,yBAAKmC,UAAU,iBACX,yBAAKA,UAAU,cAEX,yBAAKG,QAAS,kBAAM,EAAKuK,gBAAgBlL,MAAO,EAAK7B,MAAM8M,WACvD,yBAAKzK,UAAU,aACX,0BAAMA,UAAU,kBAAhB,qBAEJ,yBAAKA,UAAU,kBAAf,0BAGJ,yBAAKA,UAAW,EAAKrC,MAAM6M,SACtB3M,EAAKF,MAAMC,MAAM+G,MAAK,SAACtG,EAAGuG,GAAJ,OAAUvG,EAAEoB,SAASoF,cAAcD,EAAEnF,aAAWqF,KAAI,SAAA6F,GAAC,OACxE,yBAAK3K,UAAU,mBAAmBG,QAAS,kBAAM,EAAKsK,UAAUE,KAC5D,yBAAK3K,UAAU,sBAAsBO,IAAI,qBAAqBF,IAAKsK,EAAErK,WACrE,0BAAMN,UAAU,wBAAwB2K,EAAElL,gBAMzDiE,EAAQ/F,MAAMiF,QAAQC,KAAKiC,KAAI,SAAAqC,GAAC,OAC7B,yBAAKnH,UAAU,cACX,0BAAMR,MAAO,CAAES,MAAO,QAASC,OAAQ,WAAaC,QAAS,kBAAM,EAAKC,eAAe+G,EAAE7H,IAAKoE,EAAQ/F,MAAMiF,QAAQtD,OAApH,KACA,yBAAKU,UAAU,0BAAyB,yBAAKA,UAAU,gBAAgBK,IAAK8G,EAAE7G,SAAUC,IAAI,wBAC5F,yBAAKP,UAAU,kBAAiB,kBAAC,IAAD,CAAMgC,GAAI,SAAWmF,EAAEjM,UAAWiM,EAAE1H,WACpE,yBAAKO,UAAU,mBAAmBmH,EAAE3G,gBAO5D,kBAACrD,EAAYqH,SAAb,MACK,SAAC3G,GAAD,OACG,yCAAI,mDACA,yBAAKmC,UAAU,uBACX,yBAAKO,IAAI,qBAAqBF,IAAKxC,EAAKF,MAAMI,aAAauC,SAAUN,UAAU,kBAC/E,8BAAUA,UAAU,eAAe+D,KAAK,OAAOC,YAAY,qBAAqB1B,KAAK,UAAUuB,SAAU,SAAAD,GAAK,OAAI,EAAKE,aAAaF,MACpI,4BAAQ5D,UAAU,aAAaG,QAAS,kBAAM,EAAKsB,WAAW5D,EAAKF,MAAMI,gBAAzE,4BAKhB,yBAAKiC,UAAU,eACX,2CACC0D,EAAQ/F,MAAMiF,QAAQ7B,SAAS+D,KAAI,SAAApD,GAAO,OACvC,yBAAK1B,UAAU,oBACX,yBAAKA,UAAU,iBACX,0BAAMR,MAAO,CAAES,MAAO,QAASC,OAAQ,WAAaC,QAAS,kBAAM,EAAKyB,cAAcF,EAAQpC,IAAKoE,EAAQ/F,MAAMiF,QAAQtD,OAAzH,KACA,yBAAKU,UAAU,cAAa,yBAAKO,IAAI,qBAAqBF,IAAKqB,EAAQpB,YACvE,0BAAMN,UAAU,eAAe0B,EAAQjC,UACvC,0BAAMO,UAAU,eAAesF,IAAO5D,EAAQ3C,MAAM2I,WACpD,yBAAK1H,UAAU,kBAAkB0B,EAAQA,wB,GArM9DhB,aAmNvByJ,EAASjG,YAAczB,EAER0H,QC1NTS,E,4SAGQ3P,KAAKyI,QAAQZ,c,qIAKnB,OACI,yC,GATgBpC,aAgB5BkK,EAAc1G,YAAczB,EAEbmI,SClBTC,G,4SAGQ5P,KAAKyI,QAAQ1C,e,qIAKnB,OACI,yC,GATiBN,aAgB7BmK,GAAe3G,YAAcvD,EAEdkK,UCjBTC,G,kDACF,WAAYvN,GAAQ,IAAD,8BACf,cAAMA,IACDI,MAAQ,CACToN,gBAAgB,GAHL,E,0LAQT9P,KAAKyI,QAAQjF,W,uBACbxD,KAAKyI,QAAQrE,gBAAgB1C,aAAaE,QAAQ,a,6IAIxD5B,KAAKqD,SAAS,CAACyM,gBAAiB9P,KAAK0C,MAAMoN,mB,gFAGxB/M,EAAMwB,G,iFACnBvE,KAAKyI,QAAQnE,iBAAiBvB,EAAMwB,G,uBACpCvE,KAAKyI,QAAQjF,W,uBACbxD,KAAKyI,QAAQrE,gBAAgB1C,aAAaE,QAAQ,a,OACxD5B,KAAK8P,iB,wIAGC,IAAD,OAEL,OACI,oCACI,kBAAC5N,EAAYqH,SAAb,MACK,SAACd,GAAD,OACG,oCACKA,EAAQ/F,MAAMY,WACX,oCACI,yBAAKyB,UAAU,UACX,yBAAKA,UAAU,uBACX,yBAAKA,UAAU,cACX,0BAAMA,UAAU,kBAAkB0D,EAAQ/F,MAAMI,aAAa0B,UAC7D,0BAAMO,UAAU,iBACZ,yBAAKA,UAAU,YAAYK,IAAKqD,EAAQ/F,MAAMI,aAAauC,SAAUC,IAAI,qBAAqBJ,QAAS,kBAAM,EAAK4K,oBAClH,yBAAK/K,UAAU,eAAeN,GAAIgE,EAAQ/F,MAAMI,aAAalC,OAAOoC,MAAOkC,QAAS,kBAAM,EAAK4K,oBAC9F,EAAKpN,MAAMoN,eAAiB,oCACzB,yBAAK/K,UAAU,oBACX,wBAAIG,QAAS,kBAAM,EAAKZ,iBAAiB,QAAS,eAAlD,SAAsE,0BAAMG,GAAG,eAC/E,wBAAIS,QAAS,kBAAM,EAAKZ,iBAAiB,eAAa,aAAtD,gBAA4E,0BAAMG,GAAG,aACrF,wBAAIS,QAAS,kBAAM,EAAKZ,iBAAiB,qBAAsB,SAA/D,sBAA0F,0BAAMG,GAAG,SACnG,wBAAIS,QAAS,kBAAM,EAAKZ,iBAAiB,MAAO,UAAhD,MAA4D,0BAAMG,GAAG,UACrE,wBAAIS,QAAS,kBAAM,EAAKZ,iBAAiB,kBAAmB,SAA5D,kBAAmF,0BAAMG,GAAG,SAC5F,wBAAIS,QAAS,kBAAMuD,EAAQlF,WAA3B,YAEF,0CAQ1B,oCACI,yBAAKwB,UAAU,UACX,yBAAKA,UAAU,uBACX,yBAAKA,UAAU,cACX,kBAAC,IAAD,CAAMgC,GAAG,KAAT,wB,GA7D3BtB,aA4ErBoK,GAAO5G,YAAc/G,EAEN2N,UC/ETE,G,kDACF,WAAYzN,GAAQ,IAAD,8BACf,cAAMA,IACDI,MAAQ,GAFE,E,0LAOT1C,KAAKyI,QAAQjF,W,uBACbxD,KAAKyI,QAAQzE,a,qIAGdS,GACL,IAAI7B,EAAO5C,KAAKyI,QAAQ/F,MAAMC,MAAMwB,MAAK,SAAAuL,GAAC,OAAIA,EAAErL,MAAQI,KACxD,QAAaK,IAATlC,EACA,OAAOA,EAAK4B,W,+BAMV,IAAD,OAEL,OACI,oCACI,4CACA,kBAACtC,EAAYqH,SAAb,MACK,SAACd,GAAD,OACG,oCACKA,EAAQ/F,MAAMG,QAAQgH,KAAI,SAAA6F,GAAC,OACxB,yBAAK3K,UAAU,QACX,8BAAO,EAAKiL,SAASN,EAAE7L,SACvB,kCAAQ6L,EAAE3M,MACV,8BAAO2M,EAAEO,OACT,0BAAMlL,UAAU,YAAYsF,IAAO1J,SAAS+O,EAAE5L,OAAO2I,wB,GAlCtEhH,aA6CnBsK,GAAK9G,YAAc/G,EAEJ6N,UCmCAG,I,wDAhEb,WAAY5N,GAAQ,IAAD,8BACjB,cAAMA,IAHRC,QAAUC,OAIR,EAAKC,KAAO,IAAI3C,EAAJ,UAAmB,EAAKyC,QAAxB,uBAFK,E,uDAKRoG,GACT+C,SAASE,uBAAuB,UAAU,GAAGtC,UAAU6G,OAAO,UAC9DxH,EAAM8B,cAAcnB,UAAU8G,IAAI,Y,+BAG1B,IAAD,OAEH9M,EAAa5B,aAAaE,QAAQ,YAEtC,OACE,oCAEG0B,EACC,oCACE,6BACE,kBAAC,IAAD,CAAMyD,GAAG,KAAI,wBAAI7B,QAAS,SAAAyD,GAAK,OAAI,EAAK0H,WAAW1H,IAAQ5D,UAAU,UAAS,uBAAGA,UAAU,2BAAb,SAAjE,YACb,kBAAC,IAAD,CAAMgC,GAAG,UAAS,wBAAI7B,QAAS,SAAAyD,GAAK,OAAI,EAAK0H,WAAW1H,KAAQ,uBAAG5D,UAAU,2BAAb,QAA9C,iBAClB,kBAAC,IAAD,CAAMgC,GAAG,cAAa,wBAAI7B,QAAS,SAAAyD,GAAK,OAAI,EAAK0H,WAAW1H,KAAQ,uBAAG5D,UAAU,2BAAb,cAA9C,WACtB,kBAAC,IAAD,CAAMgC,GAAG,aAAY,wBAAI7B,QAAS,SAAAyD,GAAK,OAAI,EAAK0H,WAAW1H,KAAQ,uBAAG5D,UAAU,2BAAb,gBAA9C,gBAIzB,oCACE,6BACE,4BAAI,kBAAC,IAAD,CAAMgC,GAAG,KAAT,cAGV,kBAAC,EAAD,KACA,kBAAC,EAAD,KACE,kBAAC,EAAD,KACE,kBAAC,GAAD,MACA,kBAAC,GAAD,MACA,kBAAC,GAAD,MACA,yBAAKhC,UAAU,aACb,kBAAC,IAAD,KACGzB,EACC,oCACE,kBAAC,EAAD,CAAOgN,KAAK,WACZ,kBAAC,EAAD,CAAMA,KAAK,oBACX,kBAAC,EAAD,CAAUA,KAAK,kBACf,kBAAC,EAAD,CAAWA,KAAK,eAChB,kBAAC,EAAD,CAAUA,KAAK,cACf,kBAACC,EAAD,CAASD,KAAK,iBACd,kBAAC,GAAD,CAAMA,KAAK,OAGb,oCACE,kBAAC,EAAD,CAAOA,KAAK,IAAInN,MAAO,SAAClD,EAAUC,GAAX,OAAwB,EAAKiD,MAAMlD,EAAUC,iB,GAvDtEuF,cCdlB+K,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,GAAD,OAEFhF,SAASC,eAAe,W","file":"static/js/main.86a32c56.chunk.js","sourcesContent":["const jwtDecode = require('jwt-decode');\r\n\r\nclass AuthService {\r\n    constructor(auth_api_url) {\r\n        this.auth_api_url = auth_api_url;\r\n    }\r\n\r\n    async login(username, password) {\r\n        const res = await this.fetch(this.auth_api_url, {\r\n            method: 'POST',\r\n            body: JSON.stringify({\r\n                username,\r\n                password\r\n            })\r\n        });\r\n        let json = await res.json();\r\n        if ([401, 404].includes(parseInt(res.status))) {\r\n            throw Error(json.msg);\r\n        }\r\n        this.setToken(json.msg.token);\r\n        this.setUsername(username);\r\n        return json\r\n    }\r\n\r\n    loggedIn() {\r\n        let token = this.getToken()\r\n        if (token) {\r\n            if (jwtDecode(token).exp * 1000 <= Date.now()) {\r\n                this.logout()\r\n                window.location.href = \"/\"\r\n            }\r\n        }\r\n\r\n        return (this.getToken() !== null);\r\n    }\r\n\r\n    setToken(token) {\r\n        localStorage.setItem(\"token\", token);\r\n    }\r\n\r\n    setUsername(username) {\r\n        localStorage.setItem(\"username\", username);\r\n    }\r\n\r\n    getUsername() {\r\n        return localStorage.getItem(\"username\");\r\n    }\r\n\r\n    getToken() {\r\n        return localStorage.getItem(\"token\");\r\n    }\r\n\r\n    logout() {\r\n        localStorage.removeItem(\"token\");\r\n        localStorage.removeItem(\"username\");\r\n    }\r\n\r\n    fetch(url, options) {\r\n        const headers = {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json'\r\n        };\r\n\r\n        if (this.loggedIn()) {\r\n            headers['Authorization'] = 'Bearer ' + this.getToken()\r\n        }\r\n\r\n        return fetch(url, {\r\n            headers,\r\n            ...options\r\n        });\r\n    }\r\n}\r\n\r\nexport default AuthService;\r\n","import React, { Component } from 'react';\r\nimport AuthService from '../AuthService';\r\n\r\nexport const UserContext = React.createContext();\r\n\r\n\r\nclass UserProvider extends Component {\r\n    API_URL = process.env.REACT_APP_API_URL;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.Auth = new AuthService(`${this.API_URL}/user/authenticate`);\r\n        this.state = {\r\n            users: [],\r\n            user: [],\r\n            updates: [],\r\n            loggedInUser: {\r\n                status: {\r\n                    text: \"loading\",\r\n                    class: \"loading\"\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n\r\n        return (\r\n            <UserContext.Provider value={{\r\n                state: this.state,\r\n                login: async (username, password) => {\r\n                    try {\r\n                        await this.Auth.login(username, password);\r\n                        this.setState({ isLoggedIn: true })\r\n                        window.location.href = \"/\"\r\n                    } catch (e) {\r\n                        return e\r\n                    }\r\n                },\r\n                logOut: () => {\r\n                    this.Auth.logout()\r\n                    this.setState({ isLoggedIn: false })\r\n                    window.location.href = \"/\"\r\n                },\r\n                getUsers: async () => {\r\n                    let response = await this.Auth.fetch(`${this.API_URL}/user/all-users`)\r\n                    let users = await response.json()\r\n                    this.setState({ users: users })\r\n                },\r\n                updateUser: async (object) => {\r\n                    await this.Auth.fetch(`${this.API_URL}/user/edit-user`, {\r\n                        method: 'PUT',\r\n                        mode: 'cors',\r\n                        body: JSON.stringify({\r\n                            object: object,\r\n                            byuser: localStorage.getItem(\"userid\"),\r\n                            date: Date.now()\r\n                        })\r\n                    })\r\n                },\r\n                updateFullUser: async (object, username) => {\r\n                    await this.Auth.fetch(`${this.API_URL}/user/edit-full-user`, {\r\n                        method: 'PUT',\r\n                        mode: 'cors',\r\n                        body: JSON.stringify({\r\n                            object: object,\r\n                            username: username,\r\n                            byuser: localStorage.getItem(\"userid\"),\r\n                            date: Date.now()\r\n                        })\r\n                    })\r\n                },\r\n                getUpdates: async () => {\r\n                    let response = await this.Auth.fetch(`${this.API_URL}/user/all-updates`)\r\n                    let updates = await response.json()\r\n                    this.setState({ updates: updates.reverse() })\r\n                },\r\n                getUser: async (username) => {\r\n                    let user = await this.state.users.find(user => user.username === username)\r\n                    this.setState({ user: user })\r\n                },\r\n                getLoggedInUser: async (username) => {\r\n                    if (username !== null) {\r\n                        let user = await this.state.users.find(user => user.username === username)\r\n                        this.setState({ loggedInUser: user })\r\n                        this.setState({ isLoggedIn: true })\r\n                        localStorage.setItem(\"userid\", this.state.loggedInUser._id)\r\n                    }\r\n\r\n                },\r\n                updateUserStatus: async (text, style) => {\r\n                    await this.Auth.fetch(`${this.API_URL}/user/update-status`, {\r\n                        method: 'PUT',\r\n                        mode: 'cors',\r\n                        body: JSON.stringify({\r\n                            text: text,\r\n                            style: style,\r\n                            username: this.state.loggedInUser.username,\r\n                            fullname: this.state.loggedInUser.fullname,\r\n                            date: Date.now(),\r\n                            id: this.state.loggedInUser._id\r\n                        })\r\n                    })\r\n                },\r\n                newUser: async (user) => {\r\n                    await this.Auth.fetch(`${this.API_URL}/user/new-user`, {\r\n                        method: 'POST',\r\n                        mode: 'cors',\r\n                        body: JSON.stringify({\r\n                            user: user,\r\n                            id: this.state.loggedInUser._id\r\n                        })\r\n                    })\r\n                },\r\n                teamMember: (uid, pid) => {\r\n                    let user = this.state.users.find(user => user._id === uid)\r\n                    if (user !== undefined) {\r\n                        return (\r\n                            <div className=\"teamMember\">\r\n                                <span style={{ float: \"right\", cursor: \"pointer\" }} onClick={() => this.removeFromTeam(user._id, pid)}>x</span>\r\n                                <div className=\"teamMemberImgContainer\"><img className=\"teamMemberImg\" src={user.imageurl} alt=\"\"></img></div>\r\n                                <div className=\"teamMemberName\">{user.fullname}</div>\r\n                                <div className=\"teamMemberTitle\">{user.title}</div>\r\n                            </div>\r\n                        )\r\n                    }\r\n                },\r\n            }}>\r\n                {this.props.children}\r\n            </UserContext.Provider>\r\n        )\r\n    }\r\n}\r\n\r\nexport default UserProvider;","import React, { Component } from 'react';\r\nimport AuthService from '../AuthService';\r\nimport { Link } from \"@reach/router\";\r\n\r\nexport const CustomerContext = React.createContext();\r\n\r\n\r\nclass CustomerProvider extends Component {\r\n    API_URL = process.env.REACT_APP_API_URL;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.Auth = new AuthService(`${this.API_URL}/user/authenticate`);\r\n        this.state = {\r\n            customers: [],\r\n            customer: {\r\n                comments: [],\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n\r\n        return (\r\n            <CustomerContext.Provider value={{\r\n                state: this.state,\r\n                getCustomers: async () => {\r\n                    let response = await this.Auth.fetch(`${this.API_URL}/customer/all-customers`)\r\n                    let customers = await response.json()\r\n                    this.setState({ customers: customers })\r\n                },\r\n                getCustomer: async (id) => {\r\n                    let company = await this.state.customers.find(customer => customer._id === id)\r\n                    company.comments.reverse()\r\n                    this.setState({ customer: company })\r\n                },\r\n                newCustomer: async (customer) => {\r\n                    for (const [key, value] of Object.entries(customer)) {\r\n                        if (value === undefined) {\r\n                            customer = {\r\n                                ...customer,\r\n                                [key]: \"Ikke opgivet\"\r\n                            }\r\n                        }\r\n                    }\r\n                    await this.Auth.fetch(`${this.API_URL}/customer/new-customer`, {\r\n                        method: 'POST',\r\n                        mode: 'cors',\r\n                        body: JSON.stringify({\r\n                            customer: customer,\r\n                            byuser: localStorage.getItem(\"userid\"),\r\n                            date: Date.now()\r\n                        })\r\n                    })\r\n                },\r\n                updateCustomer: async (object) => {\r\n                    await this.Auth.fetch(`${this.API_URL}/customer/edit-customer`, {\r\n                        method: 'PUT',\r\n                        mode: 'cors',\r\n                        body: JSON.stringify({\r\n                            object: object,\r\n                            byuser: localStorage.getItem(\"userid\"),\r\n                            date: Date.now()\r\n                        })\r\n                    })\r\n                },\r\n                updateFullCustomer: async (object, id) => {\r\n                    await this.Auth.fetch(`${this.API_URL}/customer/edit-full-customer`, {\r\n                        method: 'PUT',\r\n                        mode: 'cors',\r\n                        body: JSON.stringify({\r\n                            object: object,\r\n                            id: id,\r\n                            byuser: localStorage.getItem(\"userid\"),\r\n                            date: Date.now()\r\n                        })\r\n                    })\r\n                },\r\n                newComment: async (id, comment) => {\r\n                    await this.Auth.fetch(`${this.API_URL}/customer/new-comment`, {\r\n                        method: 'POST',\r\n                        mode: 'cors',\r\n                        body: JSON.stringify({\r\n                            id: id,\r\n                            comment: comment,\r\n                            byuser: localStorage.getItem(\"userid\")\r\n                        })\r\n                    })\r\n                },\r\n                deleteCustomer: async (id) => {\r\n                    await this.Auth.fetch(`${this.API_URL}/customer/delete-customer`, {\r\n                        method: 'DELETE',\r\n                        mode: 'cors',\r\n                        body: JSON.stringify({\r\n                            id: id,\r\n                            byuser: localStorage.getItem(\"userid\"),\r\n                            date: Date.now()\r\n                        })\r\n                    })\r\n                },\r\n                deleteComment: async (commentid, customerid) => {\r\n                    await this.Auth.fetch(`${this.API_URL}/customer/delete-comment`, {\r\n                        method: 'DELETE',\r\n                        mode: 'cors',\r\n                        body: JSON.stringify({\r\n                            commentid: commentid,\r\n                            customerid: customerid,\r\n                            byuser: localStorage.getItem(\"userid\"),\r\n                            date: Date.now()\r\n                        })\r\n                    })\r\n                },\r\n                displayCustomer: (id) => {\r\n                    let customer = this.state.customers.find(customer => customer._id === id)\r\n                    if (customer !== undefined) {\r\n                        return (\r\n                            <div className=\"customerProfile\">\r\n                                <h1 className=\"customerTitle linebreak\">Kundeoplysninger</h1>\r\n                                <div className=\"customerDetails\">\r\n                                    <span className=\"customerLabel\">Virksomhed</span><span><Link to={\"/customer/\" + customer._id}>{customer.company}</Link></span>\r\n                                    <span className=\"customerLabel\">CVR</span><span>{customer.cvr}</span>\r\n                                    <span className=\"customerLabel\">Adresse</span><span>{customer.address}</span>\r\n                                    <span className=\"customerLabel\">Kontaktperson</span><span>{customer.contactpersonname}</span>\r\n                                    <span className=\"customerLabel\">Kontaktperson telefon</span><span> <a href={`tel:${customer.contactpersonphone}`}>{customer.contactpersonphone}</a></span>\r\n                                    <span className=\"customerLabel\">Kontaktperson email</span><span><a href={`mailto:${customer.contactpersonemail}`}>{customer.contactpersonemail}</a></span>\r\n                                    <span className=\"customerLabel\">Hjemmeside</span><span><a name=\"url\" target=\"_blank\" rel=\"noopener noreferrer\" href={customer.url}>{customer.url}</a></span>\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    }\r\n\r\n                }\r\n            }}>\r\n                {this.props.children}\r\n            </CustomerContext.Provider>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CustomerProvider;","import React, { Component } from 'react';\r\nimport AuthService from '../AuthService';\r\n\r\nexport const ProjectContext = React.createContext();\r\n\r\n\r\nclass ProjectProvider extends Component {\r\n    API_URL = process.env.REACT_APP_API_URL;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.Auth = new AuthService(`${this.API_URL}/user/authenticate`);\r\n        this.state = {\r\n            projects: [],\r\n            project: {\r\n                team: [],\r\n                comments: [],\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n\r\n        return (\r\n            <ProjectContext.Provider value={{\r\n                state: this.state,\r\n                getProjects: async () => {\r\n                    let response = await this.Auth.fetch(`${this.API_URL}/project/all-projects`)\r\n                    let projects = await response.json()\r\n                    this.setState({ projects: projects })\r\n                    return <></>\r\n                },\r\n                getProject: async (id) => {\r\n                    let project = await this.state.projects.find(project => project._id === id)\r\n                    project.comments.reverse()\r\n                    this.setState({ project: project })\r\n                },\r\n                addProject: async (project) => {\r\n                    await this.Auth.fetch(`${this.API_URL}/project/new-project`, {\r\n                        method: 'POST',\r\n                        mode: 'cors',\r\n                        body: JSON.stringify({\r\n                            project: project,\r\n                            byuser: localStorage.getItem(\"userid\"),\r\n                            date: Date.now()\r\n                        })\r\n                    })\r\n                },\r\n                newComment: async (id, comment) => {\r\n                    await this.Auth.fetch(`${this.API_URL}/project/new-comment`, {\r\n                        method: 'POST',\r\n                        mode: 'cors',\r\n                        body: JSON.stringify({\r\n                            id: id,\r\n                            comment: comment,\r\n                            byuser: localStorage.getItem(\"userid\")\r\n                        })\r\n                    })\r\n                },\r\n                deleteProject: async (id) => {\r\n                    await this.Auth.fetch(`${this.API_URL}/project/delete-project`, {\r\n                        method: 'DELETE',\r\n                        mode: 'cors',\r\n                        body: JSON.stringify({\r\n                            id: id,\r\n                            byuser: localStorage.getItem(\"userid\"),\r\n                            date: Date.now()\r\n                        })\r\n                    })\r\n                },\r\n                updateProject: async (object, id) => {\r\n                    await this.Auth.fetch(`${this.API_URL}/project/edit-project`, {\r\n                        method: 'POST',\r\n                        mode: 'cors',\r\n                        body: JSON.stringify({\r\n                            object: object,\r\n                            id: id,\r\n                            byuser: localStorage.getItem(\"userid\"),\r\n                            date: Date.now()\r\n                        })\r\n                    })\r\n                },\r\n                addUserToProject: async (user, id) => {\r\n                    await this.Auth.fetch(`${this.API_URL}/project/add-to-project`, {\r\n                        method: 'PUT',\r\n                        mode: 'cors',\r\n                        body: JSON.stringify({\r\n                            user: user,\r\n                            byuser: localStorage.getItem(\"userid\"),\r\n                            date: Date.now(),\r\n                            id: id\r\n                        })\r\n                    })\r\n                },\r\n                removeFromTeam: async (uid, pid) => {\r\n                    await this.Auth.fetch(`${this.API_URL}/project/delete-from-team`, {\r\n                        method: 'DELETE',\r\n                        mode: 'cors',\r\n                        body: JSON.stringify({\r\n                            uid: uid,\r\n                            pid: pid,\r\n                            byuser: localStorage.getItem(\"userid\"),\r\n                            date: Date.now()\r\n                        })\r\n                    })\r\n                },\r\n                deleteComment: async (commentid, customerid) => {\r\n                    await this.Auth.fetch(`${this.API_URL}/project/delete-comment`, {\r\n                        method: 'DELETE',\r\n                        mode: 'cors',\r\n                        body: JSON.stringify({\r\n                            commentid: commentid,\r\n                            customerid: customerid,\r\n                            byuser: localStorage.getItem(\"userid\"),\r\n                            date: Date.now()\r\n                        })\r\n                    })\r\n                },\r\n            }\r\n            }>\r\n                {this.props.children}\r\n            </ProjectContext.Provider>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ProjectProvider;","import React, { Component } from 'react';\r\nimport { UserContext } from './Contexts/UserProvider';\r\n\r\nclass Login extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            username: \"\",\r\n            password: \"\",\r\n            feedback: \"\",\r\n            feedbackStyle: {\r\n                display: \"none\"\r\n            }\r\n        }\r\n    }\r\n\r\n    async handleLogin(e) {\r\n        e.preventDefault()\r\n        let feedback = await this.context.login(this.state.username, this.state.password);\r\n        this.setState({ feedback: feedback.message, feedbackStyle: {display: \"block\"} })\r\n        await this.context.getUsers()\r\n        await this.context.getLoggedInUser(localStorage.getItem(\"username\"))\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <div className=\"login\">\r\n                    <h1>Login</h1>\r\n                    <form className=\"loginForm\">\r\n                        <div style={this.state.feedbackStyle} className=\"warningFeedback\">\r\n                            <span className=\"material-icons\">error_outline</span>\r\n                            <span>{this.state.feedback}</span>\r\n                        </div>\r\n                        <span className=\"label\">Brugernavn</span>\r\n                        <input onChange={event => this.handleChange(event)} name=\"username\" type=\"text\" placeholder=\"Brugernavn\"></input><br />\r\n                        <span className=\"label\">Adgangskode</span>\r\n                        <input onChange={event => this.handleChange(event)} name=\"password\" type=\"password\" placeholder=\"Password\"></input><br />\r\n                        <button onClick={e => this.handleLogin(e)}>Log ind</button>\r\n                    </form>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nLogin.contextType = UserContext;\r\n\r\nexport default Login;\r\n","import React, { Component } from 'react';\r\nimport { UserContext } from './Contexts/UserProvider';\r\nimport { Link } from \"@reach/router\";\r\n\r\n\r\nclass Users extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showModal: false,\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.context.getUsers()\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        })\r\n    }\r\n\r\n    async newUser(event) {\r\n        event.preventDefault()\r\n        let newUser = {\r\n            fullname: this.state.fullname,\r\n            username: this.state.username,\r\n            password: this.state.password,\r\n            email: this.state.email,\r\n            phone: this.state.phone,\r\n            title: this.state.title,\r\n            date: Date.now(),\r\n            status: { text: \"Ledig\", class: \"available\" },\r\n            imageurl: this.state.imageurl\r\n        }\r\n        await this.context.newUser(newUser)\r\n        this.setState({ showModal: !this.state.showModal })\r\n        await this.context.getUsers()\r\n    }\r\n\r\n    showModal(event) {\r\n        if ([\"newBtn\", \"modalOverlay\"].includes(event.target.classList[0])) {\r\n            this.setState({ showModal: !this.state.showModal })\r\n\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <UserContext.Consumer>\r\n                    {(context) => (\r\n                        <>\r\n\r\n                            {this.state.showModal ? <>\r\n                                <div className=\"modal\">\r\n                                    <div className=\"modalOverlay\" onClick={event => this.showModal(event)}>\r\n                                        <div className=\"modalContent\">\r\n                                            <h2 className=\"modalTitle\">Ny medarbejder</h2>\r\n                                            <form onSubmit={(event) => this.newUser(event)}>\r\n                                                <div className=\"halfwidth\">\r\n                                                    <input required className=\"modalInput\" type=\"text\" placeholder=\"Brugernavn - Bruges til login\" name=\"username\" onChange={event => this.handleChange(event)}></input>\r\n                                                    <input required className=\"modalInput\" type=\"text\" placeholder=\"Adgangskode - Bruges til login\" name=\"password\" onChange={event => this.handleChange(event)}></input>\r\n                                                </div>\r\n                                                <input required className=\"modalInput\" type=\"text\" placeholder=\"Medarbejderens fulde navn\" name=\"fullname\" onChange={event => this.handleChange(event)}></input>\r\n                                                <input required className=\"modalInput\" type=\"text\" placeholder=\"Medarbejderens titel\" name=\"title\" onChange={event => this.handleChange(event)}></input>\r\n                                                <div className=\"halfwidth\">\r\n                                                    <input required className=\"modalInput\" type=\"text\" placeholder=\"Medarbejderens email\" name=\"email\" onChange={event => this.handleChange(event)}></input>\r\n                                                    <input className=\"modalInput\" type=\"text\" placeholder=\"Medarbejderens telefonnummer\" name=\"phone\" onChange={event => this.handleChange(event)}></input>\r\n                                                </div>\r\n                                                <input className=\"modalInput\" type=\"text\" placeholder=\"Link til billede af medarbejder\" name=\"imageurl\" onChange={event => this.handleChange(event)}></input>\r\n                                                <button className=\"modalBtn\" type=\"submit\">OPRET MEDARBEJDER</button>\r\n                                            </form>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </> : <></>}\r\n\r\n                            <span className=\"inlineWrapper\"><h1>Medarbejdere</h1><button className=\"newBtn\" onClick={event => this.showModal(event)}><i className=\"material-icons-outlined\">person_add</i>OPRET NY MEDARBEJDER</button></span>\r\n                            {context.state.users.sort((a, b) => a.fullname.localeCompare(b.fullname)).map(user =>\r\n                                <div className=\"userContainer\">\r\n                                    <div className=\"userImg\"><Link to={`/user/${user.username}`}><img src={user.imageurl} alt=\"Medarbejderbillede\"></img></Link></div>\r\n                                    <div className=\"userFullName\"><p><Link to={`/user/${user.username}`}>{user.fullname}</Link></p></div>\r\n                                    <div className=\"userTitle\"><p>{user.title}</p></div>\r\n                                    <div className=\"userStatus\"><p className={user.status.class}>{user.status.text}</p></div>\r\n                                    <div className=\"userContactEmail\"><a href={`mailto:${user.email}`}><p>{user.email}</p></a></div>\r\n                                    <div className=\"userContactPhone\"><a href={`tel:${user.phone}`}><p>{user.phone}</p></a></div>\r\n                                </div>\r\n\r\n                            )}\r\n                        </>\r\n                    )}\r\n                </UserContext.Consumer>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nUsers.contextType = UserContext;\r\n\r\nexport default Users;\r\n","import React, { Component } from 'react';\r\nimport { UserContext } from './Contexts/UserProvider';\r\nimport moment from 'moment'\r\n\r\n\r\nclass EditUser extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            updatedUser: {\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({\r\n            updatedUser: {\r\n                ...this.state.updatedProject,\r\n                [event.target.name]: event.target.value\r\n            }\r\n\r\n        });\r\n    }\r\n\r\n    showModal(event) {\r\n        if (\"modalOverlay\".includes(event.target.classList[0])) {\r\n            this.props.hideModal()\r\n        }\r\n    }\r\n\r\n    async updateUser() {\r\n        await this.context.updateFullUser(this.state.updatedUser, this.props.username)\r\n        await this.props.update()\r\n        this.props.disableEdit()\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <>\r\n\r\n                <UserContext.Consumer>\r\n                    {(context) => (\r\n                        <>\r\n                            <div className=\"customerProfile\">\r\n                                <span className=\"editBtn material-icons-outlined highlightExit\" onClick={() => this.props.disableEdit()}>close</span>\r\n                                <span title=\"Gem ændringer\" className=\"editBtn material-icons-outlined highlightSave\" onClick={() => this.updateUser()}>save</span>\r\n                                <h2>Medarbejderoplysninger</h2>\r\n                                <div className=\"customerDetails\">\r\n                                    <span className=\"customerLabel\">Fulde navn</span><input onChange={event => this.handleChange(event)} className=\"editInput\" name=\"fullname\" defaultValue={context.state.user.fullname}></input>\r\n                                    <span className=\"customerLabel\">Titel</span><input onChange={event => this.handleChange(event)} className=\"editInput\" name=\"title\" defaultValue={context.state.user.title}></input>\r\n                                    <span className=\"customerLabel\">Email</span><input onChange={event => this.handleChange(event)} className=\"editInput\" name=\"email\" defaultValue={context.state.user.email}></input>\r\n                                    <span className=\"customerLabel\">Telefon</span><input onChange={event => this.handleChange(event)} className=\"editInput\" name=\"phone\" defaultValue={context.state.user.phone}></input>\r\n                                    <span className=\"customerLabel\">Billede URL</span><input onChange={event => this.handleChange(event)} className=\"editInput\" name=\"imageurl\" defaultValue={context.state.user.imageurl}></input>\r\n                                    <span className=\"customerLabel\">Profil oprettet</span><span name=\"date\">{moment(context.state.user.date).format('MMM Do YY')}</span>\r\n                                </div>\r\n                            </div>\r\n                        </>\r\n                    )}\r\n                </UserContext.Consumer>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nEditUser.contextType = UserContext;\r\n\r\nexport default EditUser;\r\n","import React, { Component } from 'react';\r\nimport { UserContext } from './Contexts/UserProvider';\r\nimport { ProjectContext } from './Contexts/ProjectProvider';\r\nimport { CustomerContext } from './Contexts/CustomerProvider';\r\nimport { Link } from \"@reach/router\";\r\nimport moment from 'moment'\r\nimport EditUser from './EditUser';\r\n\r\n\r\nclass User extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            style: {\r\n                display: \"none\"\r\n            }\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.context.getUsers()\r\n        await this.context.getUser(this.props.username)\r\n    }\r\n\r\n    async fetchNewData(){\r\n        await this.context.getUsers()\r\n        await this.context.getUser(this.props.username)\r\n    }\r\n\r\n    editUser(event) {\r\n        let position = event.currentTarget.getBoundingClientRect()\r\n        event.preventDefault()\r\n        this.setState({\r\n            oldValue: event.currentTarget.textContent,\r\n            style: {\r\n                position: \"absolute\",\r\n                left: position.x,\r\n                top: position.y - 5\r\n            },\r\n            overlay: {\r\n                width: \"100vw\",\r\n                height: \"100vw\",\r\n                top: 0,\r\n                left: 0,\r\n                position: \"fixed\"\r\n            },\r\n            updateValue: {\r\n                name: event.target.getAttribute(\"name\"),\r\n                id: this.context.state.user._id,\r\n                newValue: \"\"\r\n            }\r\n        })\r\n    }\r\n\r\n    getDeadline(date) {\r\n        if (date !== undefined) {\r\n            let deadline = moment(date).diff(moment(), 'days')\r\n\r\n            if (deadline < 0) { return (<span className=\"deadlineLate\">Overskredet med {deadline * -1 } dage</span>) }\r\n            else if (deadline > 0 && deadline < 10) { return (<span className=\"deadlineSoon\">{deadline} dage til deadline</span>) }\r\n            else if (deadline > 10) { return (<span className=\"deadlineLong\">{deadline} dage til deadline</span>) }\r\n        }\r\n    }\r\n\r\n    updateField(event) {\r\n        this.setState({\r\n            updateValue: {\r\n                ...this.state.updateValue,\r\n                newValue: event.target.value\r\n            }\r\n        })\r\n    }\r\n\r\n    async updateFieldRequest(event) {\r\n        event.preventDefault()\r\n        // Load the updated customers through context\r\n        await this.context.updateUser(this.state.updateValue)\r\n        await this.fetchNewData()\r\n        // Hide the input field\r\n        this.setState({\r\n            style: { display: \"none\" }\r\n        })\r\n        // Set the input field value to empty\r\n        document.getElementById(\"updateCustomer\").value = \"\"\r\n    }\r\n\r\n    closeEdit(event) {\r\n        // Close the overlay on click outside of the update field\r\n        if (event.target === document.getElementsByClassName(\"editContainerOverlay\")[0]) {\r\n            this.setState({\r\n                overlay: {\r\n                    display: \"none\"\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    allowEdit() {\r\n        this.setState({\r\n            allowEdit: true,\r\n            editEnabled: {\r\n                display: \"none\"\r\n            }\r\n        })\r\n    }\r\n\r\n    disableEdit() {\r\n        this.setState({\r\n            allowEdit: false,\r\n            editEnabled: {\r\n                display: \"block\"\r\n            }\r\n        })\r\n    }\r\n\r\n    \r\n\r\n    render() {\r\n\r\n        return (\r\n            <>\r\n                <UserContext.Consumer>\r\n                    {(context) => (\r\n                        <>\r\n                        \r\n                            <h1>Profil for: {context.state.user.fullname}</h1>\r\n                            <div className=\"profileContainer\">\r\n\r\n                            {this.state.allowEdit ?\r\n                                    <EditUser\r\n                                        username={this.props.username}\r\n                                        disableEdit={() => this.disableEdit()}\r\n                                        update={() => this.fetchNewData()}>\r\n                                    </EditUser> : <></>}\r\n\r\n                                <div className=\"customerProfile\" style={this.state.editEnabled}>\r\n                                    <span className=\"material-icons-outlined editBtn\" onClick={(event) => this.allowEdit(event)}>post_add</span>\r\n                                    <h2>Medarbejderoplysninger</h2>\r\n                                    <div className=\"customerDetails\">\r\n                                        <span className=\"customerLabel\">Fulde navn</span><span className=\"edit\" name=\"fullname\" onContextMenu={event => this.editUser(event)}>{context.state.user.fullname}</span>\r\n                                        <span className=\"customerLabel\">Titel</span><span className=\"edit\" name=\"title\" onContextMenu={event => this.editUser(event)}>{context.state.user.title}</span>\r\n                                        <span className=\"customerLabel\">Email</span><span className=\"edit\" name=\"email\" onContextMenu={event => this.editUser(event)}>{context.state.user.email}</span>\r\n                                        <span className=\"customerLabel\">Telefon</span><span className=\"edit\" name=\"phone\" onContextMenu={event => this.editUser(event)}>{context.state.user.phone}</span>\r\n                                        <span className=\"customerLabel\">Billede URL</span><span className=\"edit\" name=\"imageurl\" onContextMenu={event => this.editUser(event)}>Højreklik for at opdatere</span>\r\n                                        <span className=\"customerLabel\">Profil oprettet</span><span name=\"date\">{moment(context.state.user.date).format('MMM Do YY')}</span>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"profileImgContainer\">\r\n                                    <img className=\"profileImg\" alt=\"Medarbejderbillede\" src={context.state.user.imageurl}></img>\r\n                                </div>\r\n\r\n                                <div className=\"userProfile\">\r\n                                    <h2>Projekter</h2>\r\n                                    <ProjectContext.Consumer>\r\n                                        {(context) => (\r\n                                            <>\r\n                                                {context.state.projects.map(p => p.team.map(t => t.username === this.props.username ?\r\n                                                    <div className=\"profileComment\">\r\n                                                        <Link to={\"/project/\" + p._id}><span>{p.projectname}</span></Link>\r\n                                                        <div>{p.description}</div>\r\n                                                        <div className=\"projectInfo\">\r\n                                                            <span>{this.getDeadline(p.deadline)}</span>\r\n                                                            {p.team.map(img => <img alt=\"\" className=\"projectEmployeeImg\" title={img.fullname} src={img.imageurl}></img>)}\r\n                                                            </div>\r\n                                                    </div> : <></>))}\r\n                                            </>\r\n                                        )}\r\n                                    </ProjectContext.Consumer>\r\n                                </div>\r\n\r\n                                <div className=\"userProfile\">\r\n                                    <h2>Kommentarer</h2>\r\n                                    <CustomerContext.Consumer>\r\n                                        {(context) => (\r\n                                            <>\r\n                                                {context.state.customers.map(c => c.comments.map(co => co.username === this.props.username ?\r\n                                                    <div className=\"profileComment\">\r\n                                                        <div className=\"profileCommentOn\">\r\n                                                            <span>{this.props.username} </span>skrev en kommentar på: \r\n                                                            <Link to={\"/customer/\" + c._id}>\r\n                                                                <span> {c.company}</span>\r\n                                                            </Link>\r\n                                                        </div>\r\n                                                        <div className=\"profileCommentDate\">{moment(co.date).fromNow()}</div>\r\n                                                        <div className=\"profileCommentText\">{co.comment}</div>\r\n                                                    </div> : <></>))}\r\n                                            </>\r\n                                        )}\r\n                                    </CustomerContext.Consumer>\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                            <div className=\"editContainerOverlay\" style={this.state.overlay} onClick={(event) => this.closeEdit(event)}>\r\n                                <div className=\"editContainer\" style={this.state.style}>\r\n                                    <div className=\"editContent\">\r\n                                        <form>\r\n                                            <input id=\"updateCustomer\" placeholder={this.state.oldValue} type=\"text\" defaultValue={this.state.edit} onChange={(event) => this.updateField(event)}></input>\r\n                                            <button type=\"submit\" onClick={(event) => this.updateFieldRequest(event)}>Gem</button>\r\n                                        </form>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </>\r\n                    )}\r\n                </UserContext.Consumer>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nUser.contextType = UserContext;\r\n\r\nexport default User;\r\n","import React, { Component } from 'react';\r\nimport { CustomerContext } from './Contexts/CustomerProvider';\r\nimport { Link } from \"@reach/router\";\r\n\r\n\r\nclass Customers extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showModal: false,\r\n            counter: 0,\r\n            steps: {\r\n                first: true,\r\n                second: false,\r\n                third: false,\r\n                fourth: false\r\n            },\r\n            warning: {\r\n                display: \"none\"\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this.context.getCustomers()\r\n    }\r\n\r\n    showModal(event) {\r\n        if ([\"newBtn\", \"modalOverlay\"].includes(event.target.classList[0])) {\r\n            this.setState({ showModal: !this.state.showModal })\r\n\r\n        }\r\n    }\r\n\r\n    async nextStep() {\r\n\r\n        if (this.state.counter === 3) {\r\n            let customer = {\r\n                company: this.state.name,\r\n                address: this.state.address,\r\n                cvr: this.state.cvr,\r\n                url: this.state.url,\r\n                description: this.state.description,\r\n                contactpersonname: this.state.contactpersonname,\r\n                contactpersonphone: this.state.contactpersonphone,\r\n                contactpersonemail: this.state.contactpersonemail,\r\n                facebook: this.state.facebook,\r\n                instagram: this.state.instagram,\r\n                linkedin: this.state.linkedin,\r\n                pinterest: this.state.pinterest,\r\n                hours: this.state.hours,\r\n                hourprice: this.state.hourprice,\r\n                paymentoptions: this.state.paymentoptions\r\n            }\r\n            this.setState({ showModal: !this.state.showModal })\r\n            await this.context.newCustomer(customer)\r\n            await this.context.getCustomers()\r\n\r\n        } else {\r\n            let steps = [\"first\", \"second\", \"third\", \"fourth\"]\r\n            this.setState({\r\n                steps: {\r\n                    ...this.state.steps,\r\n                    [steps[this.state.counter]]: false,\r\n                    [steps[this.state.counter + 1]]: true\r\n                },\r\n                counter: this.state.counter + 1\r\n            })\r\n        }\r\n    }\r\n\r\n    showWarning(event, id) {\r\n        let position = event.target.getBoundingClientRect()\r\n        this.setState({\r\n            warning: {\r\n                left: position.x + 40,\r\n                top: position.y - 40\r\n            },\r\n            deleteCustomer: id\r\n        })\r\n    }\r\n\r\n    closeWarning() {\r\n        this.setState({\r\n            warning: {\r\n                display: \"none\"\r\n            }\r\n        })\r\n    }\r\n\r\n    async deleteCustomer(id) {\r\n        this.setState({\r\n            warning: {\r\n                display: \"none\"\r\n            }\r\n        })\r\n        await this.context.deleteCustomer(id)\r\n        await this.context.getCustomers()\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        });\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <>\r\n\r\n                <CustomerContext.Consumer>\r\n                    {(context) => (\r\n                        <>\r\n                            <div className=\"warningBox\" style={this.state.warning}>\r\n                                <span className=\"warningPointer\"></span>\r\n                                <p>Du er ved at slette en kunde. Er du sikker?</p>\r\n                                <span className=\"closeWarning\" onClick={() => this.closeWarning()}>x</span>\r\n                                <button onClick={() => this.deleteCustomer(this.state.deleteCustomer)}>Slet kunde</button>\r\n                            </div>\r\n\r\n                            <span className=\"inlineWrapper\"><h1>Kundeoversigt</h1><button className=\"newBtn\" onClick={event => this.showModal(event)}><i className=\"material-icons-outlined\">person_add</i>OPRET NY KUNDE</button></span>\r\n                            {this.state.showModal ? <>\r\n                                <div className=\"modal\">\r\n                                    <div className=\"modalOverlay\" onClick={event => this.showModal(event)}>\r\n                                        <div className=\"modalContent\">\r\n                                            <h2 className=\"modalTitle\">Ny kunde</h2>\r\n                                            <div className={this.state.steps.first ? \"\" : \"step\"}>\r\n                                                <p>Opret en ny kunde</p>\r\n                                                <input className=\"modalInput\" type=\"text\" placeholder=\"Virksomhedens navn\" name=\"name\" onChange={event => this.handleChange(event)}></input>\r\n                                                <input className=\"modalInput\" type=\"text\" placeholder=\"Virksomhedens adresse\" name=\"address\" onChange={event => this.handleChange(event)}></input>\r\n                                                <input className=\"modalInput\" type=\"text\" placeholder=\"CVR nummer\" name=\"cvr\" onChange={event => this.handleChange(event)}></input>\r\n                                                <input className=\"modalInput\" type=\"text\" placeholder=\"Kundens hjemmeside\" name=\"url\" onChange={event => this.handleChange(event)}></input>\r\n                                                <textarea className=\"modalInput modalTextArea\" type=\"text\" placeholder=\"Kort beskrivelse af kunden\" name=\"description\" onChange={event => this.handleChange(event)}></textarea>\r\n                                            </div>\r\n                                            <div className={this.state.steps.second ? \"\" : \"step\"}>\r\n                                                <p>Hvem er kontaktpersonen i virksomheden?</p>\r\n                                                <input className=\"modalInput\" type=\"text\" placeholder=\"Navn på kontaktperson\" name=\"contactpersonname\" onChange={event => this.handleChange(event)}></input>\r\n                                                <input className=\"modalInput\" type=\"text\" placeholder=\"Telefonnummer\" name=\"contactpersonphone\" onChange={event => this.handleChange(event)}></input>\r\n                                                <input className=\"modalInput\" type=\"text\" placeholder=\"Email\" name=\"contactpersonemail\" onChange={event => this.handleChange(event)}></input>\r\n                                            </div>\r\n                                            <div className={this.state.steps.third ? \"\" : \"step\"}>\r\n                                                <p>Kundens sociale medier</p>\r\n                                                <input className=\"modalInput\" type=\"text\" placeholder=\"Facebook\" name=\"facebook\" onChange={event => this.handleChange(event)}></input>\r\n                                                <input className=\"modalInput\" type=\"text\" placeholder=\"Instagram\" name=\"instagram\" onChange={event => this.handleChange(event)}></input>\r\n                                                <input className=\"modalInput\" type=\"text\" placeholder=\"LinkedIn\" name=\"linkedin\" onChange={event => this.handleChange(event)}></input>\r\n                                                <input className=\"modalInput\" type=\"text\" placeholder=\"Pinterest\" name=\"pinterest\" onChange={event => this.handleChange(event)}></input>\r\n                                            </div>\r\n                                            <div className={this.state.steps.fourth ? \"\" : \"step\"}>\r\n                                                <p>Betaling &#x26; abonnement</p>\r\n                                                <input className=\"modalInput\" type=\"text\" placeholder=\"Antal timer i måneden\" name=\"hours\" onChange={event => this.handleChange(event)}></input>\r\n                                                <input className=\"modalInput\" type=\"text\" placeholder=\"Timepris\" name=\"hourprice\" onChange={event => this.handleChange(event)}></input>\r\n                                                <textarea className=\"modalInput modalTextArea\" type=\"text\" placeholder=\"Betalingsbetingelser\" name=\"paymentoptions\" onChange={event => this.handleChange(event)}></textarea>\r\n                                            </div>\r\n                                            <button className=\"modalBtn\" onClick={() => this.nextStep()}>NÆSTE <i class=\"material-icons\">keyboard_arrow_right</i></button>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </> : <></>}\r\n                            <div className=\"customerGrid\">\r\n                                {context.state.customers.map(customer =>\r\n                                    <div className=\"customerContainer\">\r\n                                        <div className=\"customerName\"><Link to={`/customer/${customer._id}`}><h3 className=\"customerTitle\">{customer.company}</h3></Link><span onClick={(event) => this.showWarning(event, customer._id)} className=\"deleteCustomer\">x</span></div>\r\n                                        <div className=\"customerUrl\"><a href={customer.url}>{customer.url}</a></div>\r\n                                        <div className=\"customerDesc\">{customer.description}</div>\r\n                                    </div>\r\n                                )}\r\n                            </div>\r\n\r\n                        </>\r\n                    )}\r\n                </CustomerContext.Consumer>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nCustomers.contextType = CustomerContext;\r\n\r\nexport default Customers;\r\n","import React, { Component } from 'react';\r\nimport { CustomerContext } from './Contexts/CustomerProvider';\r\n\r\nclass EditCustomer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            updatedCustomer: {\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({\r\n            updatedCustomer: {\r\n                ...this.state.updatedCustomer,\r\n                [event.target.name]: event.target.value\r\n            }\r\n\r\n        });\r\n    }\r\n\r\n    showModal(event) {\r\n        if (\"modalOverlay\".includes(event.target.classList[0])) {\r\n            this.props.hideModal()\r\n        }\r\n    }\r\n\r\n    async updateCustomer() {\r\n        await this.context.updateFullCustomer(this.state.updatedCustomer, this.props.id)\r\n        await this.props.update()\r\n        this.props.disableEdit()\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <>\r\n\r\n                <CustomerContext.Consumer>\r\n                    {(context) => (\r\n                        <>\r\n                            <div className=\"gridContainer\">\r\n                                <div className=\"customerProfile\">\r\n                                    <h1 className=\"customerTitle\">{context.state.customer.company}</h1>\r\n                                    <span className=\"editBtn material-icons-outlined highlightExit\" onClick={() => this.props.disableEdit()}>close</span>\r\n                                    <span title=\"Gem ændringer\" className=\"editBtn material-icons-outlined highlightSave\" onClick={() => this.updateCustomer()}>save</span>\r\n                                    <h3><span className=\"material-icons-outlined\">subject</span> Kundeoplysninger</h3>\r\n                                    <div className=\"customerDetails\">\r\n                                        <span className=\"customerLabel\">Virksomhed</span><input onChange={event => this.handleChange(event)} className=\"editInput\" name=\"company\" defaultValue={context.state.customer.company}></input>\r\n                                        <span className=\"customerLabel\">CVR</span><input onChange={event => this.handleChange(event)} className=\"editInput\" name=\"cvr\" defaultValue={context.state.customer.cvr}></input>\r\n                                        <span className=\"customerLabel\">Adresse</span><input onChange={event => this.handleChange(event)} className=\"editInput\" name=\"address\" defaultValue={context.state.customer.address}></input>\r\n                                        <span className=\"customerLabel\">Kontaktperson</span><input onChange={event => this.handleChange(event)} className=\"editInput\" name=\"contactpersonname\" defaultValue={context.state.customer.contactpersonname}></input>\r\n                                        <span className=\"customerLabel\">Kontaktperson telefon</span><input onChange={event => this.handleChange(event)} className=\"editInput\" name=\"contactpersonphone\" defaultValue={context.state.customer.contactpersonphone}></input>\r\n                                        <span className=\"customerLabel\">Kontaktperson email</span><input onChange={event => this.handleChange(event)} className=\"editInput\" name=\"contactpersonemail\" defaultValue={context.state.customer.contactpersonemail}></input>\r\n                                        <span className=\"customerLabel\">Hjemmeside</span><input onChange={event => this.handleChange(event)} className=\"editInput\" name=\"url\" defaultValue={context.state.customer.url}></input>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"customerSub\">\r\n                                    <div>\r\n                                        <h2>Abonnement &#38; priser</h2>\r\n                                        <div className=\"customerDetails\">\r\n                                            <span className=\"customerLabel\">Antal timer</span><input onChange={event => this.handleChange(event)} className=\"editInput\" name=\"hours\" defaultValue={context.state.customer.hours}></input>\r\n                                            <span className=\"customerLabel\">Timepris</span><input onChange={event => this.handleChange(event)} className=\"editInput\" name=\"hourprice\" defaultValue={context.state.customer.hourprice}></input>\r\n                                            <span className=\"customerLabel\">Omsætning i alt</span><span>{context.state.customer.hourprice * context.state.customer.hours} kr/måneden</span>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div>\r\n                                        <h2>Sociale medier</h2>\r\n                                        <div className=\"customerDetails\">\r\n                                            <span className=\"customerLabel\">Facebook</span><input onChange={event => this.handleChange(event)} className=\"editInput\" name=\"facebook\" defaultValue={context.state.customer.facebook}></input>\r\n                                            <span className=\"customerLabel\">Instagram</span><input onChange={event => this.handleChange(event)} className=\"editInput\" name=\"instagram\" defaultValue={context.state.customer.instagram}></input>\r\n                                            <span className=\"customerLabel\">LinkedIn</span><input onChange={event => this.handleChange(event)} className=\"editInput\" name=\"linkedin\" defaultValue={context.state.customer.linkedin}></input>\r\n                                            <span className=\"customerLabel\">Pinterest</span><input onChange={event => this.handleChange(event)} className=\"editInput\" name=\"pinterest\" defaultValue={context.state.customer.pinterest}></input>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </div>\r\n\r\n                        </>\r\n                    )}\r\n                </CustomerContext.Consumer>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nEditCustomer.contextType = CustomerContext;\r\n\r\nexport default EditCustomer;\r\n","import React, { Component } from 'react';\r\nimport { CustomerContext } from './Contexts/CustomerProvider';\r\nimport { UserContext } from './Contexts/UserProvider';\r\nimport moment from 'moment';\r\nimport EditCustomer from './EditCustomer';\r\n\r\n\r\nclass Customer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            comment: null,\r\n            style: {\r\n                display: \"none\"\r\n            },\r\n            tooltip: {\r\n                display: \"none\"\r\n            }\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.context.getCustomers()\r\n        await this.context.getCustomer(this.props.id)\r\n    }\r\n\r\n    async fetchNewData(){\r\n        await this.context.getCustomers()\r\n        await this.context.getCustomer(this.props.id)\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        });\r\n    }\r\n\r\n    async newComment(context) {\r\n        if (this.state.comment !== null) {\r\n            let comment = {\r\n                comment: this.state.comment,\r\n                username: context.username,\r\n                fullname: context.fullname,\r\n                date: Date.now(),\r\n                imageurl: context.imageurl,\r\n            }\r\n            await this.context.newComment(this.context.state.customer._id, comment)\r\n            document.querySelector(\".commentInput\").value = \"\"\r\n            await this.context.getCustomers()\r\n            await this.context.getCustomer(this.props.id)\r\n        }\r\n    }\r\n\r\n    editCustomer(event) {\r\n        let position = event.currentTarget.getBoundingClientRect()\r\n        event.preventDefault()\r\n        this.setState({\r\n            oldValue: event.currentTarget.textContent,\r\n            style: {\r\n                position: \"absolute\",\r\n                left: position.x,\r\n                top: position.y - 5\r\n            },\r\n            overlay: {\r\n                width: \"100vw\",\r\n                height: \"100vw\",\r\n                top: 0,\r\n                left: 0,\r\n                position: \"fixed\"\r\n            },\r\n            updateValue: {\r\n                name: event.target.getAttribute(\"name\"),\r\n                id: this.context.state.customer._id,\r\n                newValue: \"\"\r\n            }\r\n        })\r\n    }\r\n\r\n    updateField(event) {\r\n        this.setState({\r\n            updateValue: {\r\n                ...this.state.updateValue,\r\n                newValue: event.target.value\r\n            }\r\n        })\r\n    }\r\n\r\n    async updateFieldRequest(event) {\r\n        event.preventDefault()\r\n        // Load the updated customers through context\r\n        await this.context.updateCustomer(this.state.updateValue)\r\n        await this.context.getCustomers()\r\n        await this.context.getCustomer(this.props.id)\r\n        // Hide the input field\r\n        this.setState({\r\n            style: { display: \"none\" }\r\n        })\r\n        // Set the input field value to empty\r\n        document.getElementById(\"updateCustomer\").value = \"\"\r\n    }\r\n\r\n    closeEdit(event) {\r\n        // Close the overlay on click outside of the update field\r\n        if (event.target === document.getElementsByClassName(\"editContainerOverlay\")[0]) {\r\n            this.setState({\r\n                overlay: {\r\n                    display: \"none\"\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    async deleteComment(commentid, customerid){\r\n        await this.context.deleteComment(commentid, customerid)\r\n        await this.context.getCustomers()\r\n        await this.context.getCustomer(this.props.id)\r\n    }\r\n\r\n    allowEdit(){\r\n        this.setState({\r\n            allowEdit: true,\r\n            editEnabled: {\r\n                display: \"none\"\r\n            }\r\n        })\r\n    }\r\n\r\n    disableEdit(){\r\n        this.setState({\r\n            allowEdit: false,\r\n            editEnabled: {\r\n                display: \"grid\"\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <>\r\n                <CustomerContext.Consumer>\r\n                    {(context) => (\r\n                        <>\r\n                            <div className=\"tooltip\" style={this.state.tooltip}>\r\n                                <span className=\"tooltipPointer\"></span>\r\n                                <p>Højreklik på et felt for at opdatere det. Klik på ikonet for at se hvilke felter der kan redigeres.</p>\r\n                                <span className=\"closeTooltip\" onClick={() => this.closeTooltip()}>x</span>\r\n                            </div>\r\n\r\n                            <div className=\"editContainerOverlay\" style={this.state.overlay} onClick={(event) => this.closeEdit(event)}>\r\n                                <div className=\"editContainer\" style={this.state.style}>\r\n                                    <div className=\"editContent\">\r\n                                        <form>\r\n                                            <input id=\"updateCustomer\" placeholder={this.state.oldValue} type=\"text\" defaultValue={this.state.edit} onChange={(event) => this.updateField(event)}></input>\r\n                                            <button type=\"submit\" onClick={(event) => this.updateFieldRequest(event)}>Gem</button>\r\n                                        </form>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            {this.state.allowEdit ?\r\n                                <EditCustomer\r\n                                    id={this.props.id}\r\n                                    disableEdit={() => this.disableEdit()}\r\n                                    update={() => this.fetchNewData()}>\r\n                                </EditCustomer> : <></>}\r\n\r\n                            <div className=\"gridContainer\" style={this.state.editEnabled}>\r\n                                <div className=\"customerProfile\">\r\n                                    <h1 className=\"customerTitle\">{context.state.customer.company}</h1>\r\n                                    <span className=\"editBtn material-icons-outlined\" onClick={(event) => this.allowEdit(event)}>post_add</span>\r\n\r\n                                    <div className=\"customerUrl\"><span className=\"material-icons-outlined customerLink\">exit_to_app</span><a href={context.state.customer.url}> {context.state.customer.url}</a></div>\r\n                                    <h3><span className=\"material-icons-outlined\">subject</span> Kundeoplysninger</h3>\r\n                                    <div className=\"customerDetails\">\r\n                                        <span className=\"customerLabel\">Virksomhed</span><span className=\"edit\" name=\"company\" onContextMenu={event => this.editCustomer(event)}>{context.state.customer.company}</span>\r\n                                        <span className=\"customerLabel\">CVR</span><span className=\"edit\" name=\"cvr\" onContextMenu={event => this.editCustomer(event)}>{context.state.customer.cvr}</span>\r\n                                        <span className=\"customerLabel\">Adresse</span><span className=\"edit\" name=\"address\" onContextMenu={event => this.editCustomer(event)}>{context.state.customer.address}</span>\r\n                                        <span className=\"customerLabel\">Kontaktperson</span><span className=\"edit\" name=\"contactpersonname\" onContextMenu={event => this.editCustomer(event)}>{context.state.customer.contactpersonname}</span>\r\n                                        <span className=\"customerLabel\">Kontaktperson telefon</span><span className=\"edit\"><a name=\"contactpersonphone\" onContextMenu={event => this.editCustomer(event)} href={`tel:${context.state.customer.contactpersonphone}`}>{context.state.customer.contactpersonphone}</a></span>\r\n                                        <span className=\"customerLabel\">Kontaktperson email</span><span className=\"edit\"><a name=\"contactpersonemail\" onContextMenu={event => this.editCustomer(event)} href={`mailto:${context.state.customer.contactpersonemail}`}>{context.state.customer.contactpersonemail}</a></span>\r\n                                        <span className=\"customerLabel\">Hjemmeside</span><span className=\"edit\"><a name=\"url\" onContextMenu={event => this.editCustomer(event)} target=\"_blank\" rel=\"noopener noreferrer\" href={context.state.customer.url}>{context.state.customer.url}</a></span>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"customerSub\">\r\n                                    <div>\r\n                                        <h2>Abonnement &#38; priser</h2>\r\n                                        <div className=\"customerDetails\">\r\n                                            <span className=\"customerLabel\">Antal timer</span><span className=\"edit\" name=\"hours\" onContextMenu={event => this.editCustomer(event)}>{context.state.customer.hours}</span>\r\n                                            <span className=\"customerLabel\">Timepris</span><span className=\"edit\" name=\"hourprice\" onContextMenu={event => this.editCustomer(event)}>{context.state.customer.hourprice}</span>\r\n                                            <span className=\"customerLabel\">Omsætning i alt</span><span>{context.state.customer.hourprice * context.state.customer.hours} kr/måneden</span>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div>\r\n                                        <h2>Sociale medier</h2>\r\n                                        <div className=\"customerDetails\">\r\n                                            <span className=\"customerLabel\">Facebook</span><span className=\"edit\"><a name=\"facebook\" onContextMenu={event => this.editCustomer(event)} target=\"_blank\" rel=\"noopener noreferrer\" href={context.state.customer.facebook}>{context.state.customer.facebook}</a></span>\r\n                                            <span className=\"customerLabel\">Instagram</span><span className=\"edit\"><a name=\"instagram\" onContextMenu={event => this.editCustomer(event)} target=\"_blank\" rel=\"noopener noreferrer\" href={context.state.customer.instagram}>{context.state.customer.instagram}</a></span>\r\n                                            <span className=\"customerLabel\">LinkedIn</span><span className=\"edit\"><a name=\"linkedin\" onContextMenu={event => this.editCustomer(event)} target=\"_blank\" rel=\"noopener noreferrer\" href={context.state.customer.linkedin}>{context.state.customer.linkedin}</a></span>\r\n                                            <span className=\"customerLabel\">Pinterest</span><span className=\"edit\"><a name=\"pinterest\" onContextMenu={event => this.editCustomer(event)} target=\"_blank\" rel=\"noopener noreferrer\" href={context.state.customer.pinterest}>{context.state.customer.pinterest}</a></span>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n\r\n                            <UserContext.Consumer>\r\n                                {(context) => (\r\n                                    <>  <h2>Tilføj kommentar</h2>\r\n                                        <div className=\"newComment clearfix\">\r\n                                            <img alt=\"Medarbejderbillede\" src={context.state.loggedInUser.imageurl} className=\"newCommentImg\"></img>\r\n                                            <textarea className=\"commentInput\" type=\"text\" placeholder=\"Skriv en kommentar\" name=\"comment\" onChange={event => this.handleChange(event)}></textarea>\r\n                                            <button className=\"commentBtn\" onClick={() => this.newComment(context.state.loggedInUser)}>Tilføj kommentar</button>\r\n                                        </div>\r\n                                    </>)}\r\n                            </UserContext.Consumer>\r\n\r\n                            <div className=\"allComments\">\r\n                                <h2>Kommentarer</h2>\r\n                                {context.state.customer.comments.map(comment =>\r\n                                    <div className=\"commentContainer\">\r\n                                        <div className=\"commentAuthor\">\r\n                                            <span style={{float: \"right\", cursor: \"pointer\"}} onClick={() => this.deleteComment(comment._id, context.state.customer._id)}>x</span>\r\n                                            <div className=\"commentImg\"><img alt=\"Medarbejderbillede\" src={comment.imageurl}></img></div>\r\n                                            <span className=\"commentName\">{comment.fullname}</span>\r\n                                            <span className=\"commentDate\">{moment(comment.date).fromNow()}</span>\r\n                                            <div className=\"commentContent\">{comment.comment}</div>\r\n                                        </div>\r\n                                    </div>\r\n                                )}\r\n                            </div>\r\n                        </>\r\n                    )}\r\n                </CustomerContext.Consumer>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nCustomer.contextType = CustomerContext;\r\n\r\nexport default Customer;\r\n","import React, { Component } from 'react';\r\nimport { UserContext } from './Contexts/UserProvider';\r\n\r\nclass Autocomplete extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            users: []\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.context.getUsers()\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({\r\n            style: { display: \"block\"},\r\n            [event.target.name]: event.target.value\r\n        }, () => {\r\n            let users = this.context.state.users.filter(user => \r\n                user.fullname.includes(this.state.user) &&\r\n                this.props.team.map(t => t._id).indexOf(user._id) < 0)\r\n            this.setState({users: users})\r\n        });\r\n    }\r\n\r\n    hideSuggestions() {\r\n        this.setState({style: {display: \"none\"}})\r\n        document.getElementById(\"sInput\").value = \" \"\r\n    }\r\n\r\n    render() {\r\n\r\n        let results = this.state.users.map(user =>\r\n            <div className=\"suggestion\" style={this.state.style} onClick={() => { this.props.updateTeam(user); this.hideSuggestions() }}>\r\n                <img className=\"suggestionImg\" alt=\"\" src={user.imageurl}></img>\r\n                <span className=\"suggestionName\">{user.fullname}</span>\r\n                <span className=\"suggestionTitle\"> - {user.title}</span>\r\n            </div>)\r\n\r\n        let selected = this.props.team.map(t => <img alt=\"\" className=\"selectedImg\" src={t.imageurl} onClick={() => { this.props.removeFromTeam(t._id) }}></img>)\r\n\r\n        return (\r\n            <>\r\n                <div className=\"inputContainer\">\r\n                    <input autoComplete=\"off\" id=\"sInput\" className=\"suggestionInput\" type=\"text\" placeholder=\"Ansvarlige for projektet\" name=\"user\" onChange={event => this.handleChange(event)}></input>\r\n                    <span className=\"selectedTeam\">{selected}</span>\r\n                </div>\r\n                <div className=\"suggestionContainer\">{results}</div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nAutocomplete.contextType = UserContext;\r\n\r\nexport default Autocomplete;\r\n","import React, { Component } from 'react';\r\nimport { CustomerContext } from './Contexts/CustomerProvider';\r\n\r\nclass AutocompleteCustomer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            customer: {},\r\n            style: {\r\n                display: \"none\"\r\n            }\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.context.getCustomers()\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({\r\n            style: { display: \"block\" },\r\n            [event.target.name]: event.target.value\r\n        }, () => {\r\n            let customer = this.context.state.customers.find(c => c.company.includes(this.state.company))\r\n            if (customer) {\r\n                this.setState({ customer: customer })\r\n            } else {\r\n                this.setState({ customer: {company: \"Ingen resultater\"}})\r\n            }\r\n\r\n        });\r\n    }\r\n\r\n    hideSuggestions(event, id) {\r\n        this.props.addCustomer(id)\r\n        let value = event.currentTarget.querySelector('span').innerHTML\r\n        document.getElementById(\"company\").value = value\r\n        this.setState({ style: { display: \"none\" } })\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <>\r\n                <div className=\"inputContainer\">\r\n                    <input id=\"company\" autoComplete=\"off\" className=\"suggestionInput\" type=\"text\" placeholder=\"Kundens navn\" name=\"company\" onChange={event => this.handleChange(event)}></input>\r\n                </div>\r\n                <div className=\"suggestionContainer\">\r\n                    <div className=\"suggestion\" style={this.state.style} onClick={(event) => { this.hideSuggestions(event, this.state.customer._id) }}>\r\n                        <span className=\"suggestionName\">{this.state.customer.company}</span>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nAutocompleteCustomer.contextType = CustomerContext;\r\n\r\nexport default AutocompleteCustomer;\r\n","import React, { Component } from 'react';\r\nimport { ProjectContext } from './Contexts/ProjectProvider';\r\nimport Autocomplete from './Autocomplete'\r\nimport AutocompleteCustomer from './AutocompleteCustomer'\r\nimport { Link } from \"@reach/router\";\r\nimport moment from 'moment';\r\n\r\n\r\nclass Projects extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showModal: false,\r\n            team: [],\r\n            warning: {\r\n                display: \"none\"\r\n            },\r\n            feedback: {\r\n                display: \"none\"\r\n            }\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.context.getProjects()\r\n    }\r\n\r\n    getDeadline(date) {\r\n        if (date !== undefined) {\r\n            let deadline = moment(date).diff(moment(), 'days')\r\n\r\n            if (deadline < 0) { return (<span className=\"deadlineLate\">Overskredet med {deadline * -1 } dage</span>) }\r\n            else if (deadline > 0 && deadline < 10) { return (<span className=\"deadlineSoon\">{deadline} dage til deadline</span>) }\r\n            else if (deadline > 10) { return (<span className=\"deadlineLong\">{deadline} dage til deadline</span>) }\r\n        }\r\n    }\r\n\r\n    updateTeam(user) {\r\n        this.setState({\r\n            team: [...this.state.team, user]\r\n        })\r\n    }\r\n\r\n    addCustomer(id) {\r\n        this.setState({\r\n            customer: id\r\n        })\r\n    }\r\n\r\n    removeFromTeam(id) {\r\n        let users = this.state.team.filter(user => user._id !== id)\r\n        this.setState({\r\n            team: users\r\n        })\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        })\r\n    }\r\n\r\n    async createProject() {\r\n        if(this.state.customer !== undefined){\r\n            let newProject = {\r\n                company: this.state.customer,\r\n                description: this.state.description,\r\n                deadline: this.state.deadline,\r\n                team: this.state.team,\r\n                date: Date.now(),\r\n                projectname: this.state.projectname,\r\n    \r\n            }\r\n            await this.context.addProject(newProject)\r\n            this.setState({ showModal: !this.state.showModal })\r\n            await this.context.getProjects()\r\n        } else {\r\n            this.setState({\r\n                feedback: {\r\n                    display: \"block\"\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    showModal(event) {\r\n        if ([\"newBtn\", \"modalOverlay\"].includes(event.target.classList[0])) {\r\n            this.setState({ showModal: !this.state.showModal })\r\n\r\n        }\r\n    }\r\n\r\n    showWarning(event, id) {\r\n        let position = event.target.getBoundingClientRect()\r\n        this.setState({\r\n            warning: {\r\n                left: position.x + 40,\r\n                top: position.y - 40\r\n            },\r\n            deleteProject: id\r\n        })\r\n    }\r\n\r\n    closeWarning() {\r\n        this.setState({\r\n            warning: {\r\n                display: \"none\"\r\n            }\r\n        })\r\n    }\r\n\r\n    async deleteProject(id) {\r\n        this.setState({\r\n            warning: {\r\n                display: \"none\"\r\n            }\r\n        })\r\n        await this.context.deleteProject(id)\r\n        await this.context.getProjects()\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n            <>\r\n                <span className=\"inlineWrapper\"><h1>Projektoversigt</h1><button className=\"newBtn\" onClick={event => this.showModal(event)}><i className=\"material-icons-outlined\">content_copy</i>OPRET NYT PROJEKT</button></span>\r\n                <ProjectContext.Consumer>\r\n                    {(context) => (\r\n                        <>\r\n                            <div className=\"warningBox\" style={this.state.warning}>\r\n                                <span className=\"warningPointer\"></span>\r\n                                <p>Du er ved at slette et projekt. Er du sikker?</p>\r\n                                <span className=\"closeWarning\" onClick={() => this.closeWarning()}>x</span>\r\n                                <button onClick={() => this.deleteProject(this.state.deleteProject)}>Slet projekt</button>\r\n                            </div>\r\n\r\n                            {this.state.showModal ? <>\r\n                                <div className=\"modal\">\r\n                                    <div className=\"modalOverlay\" onClick={event => this.showModal(event)}>\r\n                                        <div className=\"modalContent\">\r\n                                            <h2 className=\"modalTitle\">Nyt projekt</h2>\r\n                                            <div style={this.state.feedback} className=\"warningFeedback\">\r\n                                            <span className=\"material-icons\">error_outline</span>\r\n                                            <span>Vælg en kunde fra listen.</span>\r\n                                            </div>\r\n                                            <div>\r\n                                                <AutocompleteCustomer addCustomer={(id) => this.addCustomer(id)}></AutocompleteCustomer>\r\n                                                <input className=\"modalInput\" type=\"text\" placeholder=\"Navngiv projektet\" name=\"projectname\" onChange={event => this.handleChange(event)}></input>\r\n                                                <input className=\"modalInput\" type=\"date\" placeholder=\"Deadline\" name=\"deadline\" onChange={event => this.handleChange(event)}></input>\r\n                                                <Autocomplete\r\n                                                    updateTeam={(id) => this.updateTeam(id)}\r\n                                                    removeFromTeam={(id) => this.removeFromTeam(id)}\r\n                                                    team={this.state.team}>\r\n                                                </Autocomplete>\r\n                                                <textarea className=\"modalInput modalTextArea\" type=\"text\" placeholder=\"Beskriv projektet\" name=\"description\" onChange={event => this.handleChange(event)}></textarea>\r\n                                            </div>\r\n                                            <button className=\"modalBtn\" onClick={() => this.createProject()}>OPRET <i className=\"material-icons\">library_add_check</i></button>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </> : <></>}\r\n\r\n                            <div className=\"customerGrid\">\r\n                                {context.state.projects.map(project =>\r\n                                    <div className=\"customerContainer\">\r\n                                        <div className=\"customerName\"><Link to={`/project/${project._id}`}><h3 className=\"customerTitle\">{project.projectname}</h3></Link><span onClick={(event) => this.showWarning(event, project._id)} className=\"deleteCustomer\">x</span></div>\r\n                                        <div className=\"customerDesc\">{project.description}</div>\r\n                                        <div className=\"projectInfo\"><span>{this.getDeadline(project.deadline)}</span> {project.team.map(t => <img alt=\"\" className=\"projectEmployeeImg\" title={t.fullname} src={t.imageurl}></img>)}</div>\r\n                                    </div>\r\n                                )}\r\n                            </div>\r\n                        </>\r\n                    )}\r\n                </ProjectContext.Consumer>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nProjects.contextType = ProjectContext;\r\n\r\nexport default Projects;\r\n","import React, { Component } from 'react';\r\nimport { ProjectContext } from './Contexts/ProjectProvider';\r\n\r\n\r\nclass EditProject extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            updatedProject: {\r\n                projectname: this.props.projectname,\r\n                description: this.props.description,\r\n                deadline: this.props.deadline,\r\n                status: this.props.status,\r\n            }\r\n        }\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({\r\n            updatedProject: {\r\n                ...this.state.updatedProject,\r\n                [event.target.name]: event.target.value\r\n            }\r\n\r\n        });\r\n    }\r\n\r\n    showModal(event) {\r\n        if (\"modalOverlay\".includes(event.target.classList[0])) {\r\n            this.props.hideModal()\r\n        }\r\n    }\r\n\r\n    async updateProject() {\r\n        await this.context.updateProject(this.state.updatedProject, this.props.id)\r\n        await this.props.update()\r\n        this.props.disableEdit()\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <>\r\n\r\n                <ProjectContext.Consumer>\r\n                    {(context) => (\r\n                        <>\r\n                            <div className=\"customerProfile\" style={this.state.editEnabled}>\r\n                                <h1 className=\"customerTitle linebreak\">Projektoplysninger</h1>\r\n                                <span className=\"editBtn material-icons-outlined highlightExit\" onClick={() => this.props.disableEdit()}>close</span>\r\n                                <span title=\"Gem ændringer\" className=\"editBtn material-icons-outlined highlightSave\" onClick={() => this.updateProject()}>save</span>\r\n                                <div className=\"customerDetails\">\r\n                                    <span className=\"customerLabel\">Projektnavn</span><input onChange={event => this.handleChange(event)} className=\"modalInput\" name=\"projectname\" defaultValue={context.state.project.projectname}></input>\r\n                                    <span className=\"customerLabel\">Beskrivelse</span><textarea onChange={event => this.handleChange(event)} className=\"edit modalInput modalTextArea\" name=\"description\" defaultValue={context.state.project.description}></textarea>\r\n                                    <span className=\"customerLabel\">Deadline</span><input onChange={event => this.handleChange(event)} type=\"date\" className=\"modalInput\" name=\"deadline\" defaultValue={context.state.project.deadline}></input>\r\n                                    <span className=\"customerLabel\">Status</span><select onChange={event => this.handleChange(event)} name=\"status\" className=\"modalSelect\"><option>Fuldført</option><option>Afventer</option><option>Igangværende</option></select>\r\n                                </div>\r\n                            </div>\r\n                        </>\r\n                    )}\r\n                </ProjectContext.Consumer>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nEditProject.contextType = ProjectContext;\r\n\r\nexport default EditProject;\r\n","import React, { Component } from 'react';\r\nimport { ProjectContext } from './Contexts/ProjectProvider';\r\nimport { UserContext } from './Contexts/UserProvider';\r\nimport moment from 'moment';\r\nimport { CustomerContext } from './Contexts/CustomerProvider';\r\nimport EditProject from './EditProject'\r\nimport { Link } from \"@reach/router\";\r\n\r\n\r\nclass Projects extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            team: [],\r\n            teamList: {\r\n                display: \"none\"\r\n            },\r\n            classes: \"selectMemberContainer\",\r\n            style: {\r\n                display: \"none\"\r\n            }\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.context.getProjects()\r\n        await this.context.getProject(this.props.id)\r\n    }\r\n\r\n    async fetchNewData() {\r\n        await this.context.getProjects()\r\n        await this.context.getProject(this.props.id)\r\n    }\r\n\r\n    getDeadline(date) {\r\n        if (date !== undefined) {\r\n            let deadline = moment(date).diff(moment(), 'days')\r\n\r\n            if (deadline < 0) { return (<span className=\"deadlineLate\">Overskredet med {deadline * -1} dage</span>) }\r\n            else if (deadline > 0 && deadline < 10) { return (<span className=\"deadlineSoon\">{deadline} dage til deadline</span>) }\r\n            else if (deadline > 10) { return (<span className=\"deadlineLong\">{deadline} dage til deadline</span>) }\r\n        }\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        });\r\n    }\r\n\r\n    async newComment(context) {\r\n        if (this.state.comment !== null) {\r\n            let comment = {\r\n                comment: this.state.comment,\r\n                username: context.username,\r\n                fullname: context.fullname,\r\n                date: Date.now(),\r\n                imageurl: context.imageurl,\r\n            }\r\n            await this.context.newComment(this.context.state.project._id, comment)\r\n            document.querySelector(\".commentInput\").value = \"\"\r\n            await this.fetchNewData()\r\n        }\r\n    }\r\n\r\n    async deleteComment(commentid, customerid) {\r\n        await this.context.deleteComment(commentid, customerid)\r\n        await this.fetchNewData()\r\n    }\r\n\r\n    displayUsers() {\r\n        this.setState({\r\n            addToTeam: {\r\n                display: \"none\"\r\n            },\r\n            classes: \"teamOverflow animate__animated animate__slideInDown\"\r\n        })\r\n    }\r\n\r\n    async addToTeam(user) {\r\n        await this.context.addUserToProject(user, this.props.id)\r\n        await this.fetchNewData()\r\n    }\r\n\r\n    async removeFromTeam(uid, pid) {\r\n        await this.context.removeFromTeam(uid, pid)\r\n        await this.fetchNewData()\r\n    }\r\n\r\n    allowEdit() {\r\n        this.setState({\r\n            allowEdit: true,\r\n            editEnabled: {\r\n                display: \"none\"\r\n            }\r\n        })\r\n    }\r\n\r\n    disableEdit() {\r\n        this.setState({\r\n            allowEdit: false,\r\n            editEnabled: {\r\n                display: \"block\"\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n            <>\r\n\r\n                <ProjectContext.Consumer>\r\n                    {(context) => (\r\n                        <>\r\n                            <div className=\"gridContainer\">\r\n\r\n                                {this.state.allowEdit ?\r\n                                    <EditProject\r\n                                        id={this.props.id}\r\n                                        projectname={context.state.project.projectname}\r\n                                        description={context.state.project.description}\r\n                                        status={context.state.project.status}\r\n                                        deadline={context.state.project.deadline}\r\n                                        disableEdit={() => this.disableEdit()}\r\n                                        update={() => this.fetchNewData()}>\r\n                                    </EditProject> : <></>}\r\n\r\n                                <div className=\"customerProfile\" style={this.state.editEnabled}>\r\n                                    <h1 className=\"customerTitle linebreak\">Projektoplysninger</h1>\r\n                                    <span className=\"editBtn material-icons-outlined\" onClick={(event) => this.allowEdit(event)}>post_add</span>\r\n                                    <div className=\"customerDetails\">\r\n                                        <span className=\"customerLabel\">Projektnavn</span><span className=\"edit\" name=\"projectname\">{context.state.project.projectname}</span>\r\n                                        <span className=\"customerLabel\">Beskrivelse</span><span className=\"edit linebreak\" name=\"projectname\">{context.state.project.description}</span>\r\n                                        <span className=\"customerLabel\">Deadline</span><span className=\"edit\" name=\"projectname\">{context.state.project.deadline}</span>\r\n                                        <span className=\"customerLabel\">Dage til deadline</span><span name=\"projectname\">{this.getDeadline(context.state.project.deadline)}</span>\r\n                                        <span className=\"customerLabel\">Status</span><span className=\"edit\" name=\"projectname\">{context.state.project.status}</span>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <CustomerContext.Consumer>\r\n                                    {(customer) => (\r\n                                        <>\r\n                                            {customer.displayCustomer(context.state.project.company)}\r\n                                        </>\r\n                                    )}\r\n                                </CustomerContext.Consumer>\r\n                            </div>\r\n\r\n                            <UserContext.Consumer>\r\n                                {(user) => (\r\n                                    <>\r\n                                        <h2>Team</h2>\r\n                                        <div className=\"teamContainer\">\r\n                                            <div className=\"teamMember\">\r\n\r\n                                                <div onClick={() => this.displayUsers()} style={this.state.addToTeam}>\r\n                                                    <div className=\"addMember\">\r\n                                                        <span className=\"material-icons\">person_add_alt_1</span>\r\n                                                    </div>\r\n                                                    <div className=\"teamMemberName\">Tilføj medarbejder</div>\r\n                                                </div>\r\n\r\n                                                <div className={this.state.classes}>\r\n                                                    {user.state.users.sort((a, b) => a.fullname.localeCompare(b.fullname)).map(u =>\r\n                                                        <div className=\"selectTeamMember\" onClick={() => this.addToTeam(u)}>\r\n                                                            <img className=\"selectTeamMemberImg\" alt=\"Medarbejderbillede\" src={u.imageurl}></img>\r\n                                                            <span className=\"selectTeamMemberName\">{u.fullname}</span>\r\n                                                        </div>)}\r\n                                                </div>\r\n\r\n                                            </div>\r\n\r\n                                            {context.state.project.team.map(t =>\r\n                                                <div className=\"teamMember\">\r\n                                                    <span style={{ float: \"right\", cursor: \"pointer\" }} onClick={() => this.removeFromTeam(t._id, context.state.project._id)}>x</span>\r\n                                                    <div className=\"teamMemberImgContainer\"><img className=\"teamMemberImg\" src={t.imageurl} alt=\"Medarbejderbillede\"></img></div>\r\n                                                    <div className=\"teamMemberName\"><Link to={\"/user/\" + t.username}>{t.fullname}</Link></div>\r\n                                                    <div className=\"teamMemberTitle\">{t.title}</div>\r\n                                                </div>\r\n                                            )}\r\n                                        </div>\r\n                                    </>)}\r\n                            </UserContext.Consumer>\r\n\r\n                            <UserContext.Consumer>\r\n                                {(user) => (\r\n                                    <>  <h2>Tilføj kommentar</h2>\r\n                                        <div className=\"newComment clearfix\">\r\n                                            <img alt=\"Medarbejderbillede\" src={user.state.loggedInUser.imageurl} className=\"newCommentImg\"></img>\r\n                                            <textarea className=\"commentInput\" type=\"text\" placeholder=\"Skriv en kommentar\" name=\"comment\" onChange={event => this.handleChange(event)}></textarea>\r\n                                            <button className=\"commentBtn\" onClick={() => this.newComment(user.state.loggedInUser)}>Tilføj kommentar</button>\r\n                                        </div>\r\n                                    </>)}\r\n                            </UserContext.Consumer>\r\n\r\n                            <div className=\"allComments\">\r\n                                <h2>Kommentarer</h2>\r\n                                {context.state.project.comments.map(comment =>\r\n                                    <div className=\"commentContainer\">\r\n                                        <div className=\"commentAuthor\">\r\n                                            <span style={{ float: \"right\", cursor: \"pointer\" }} onClick={() => this.deleteComment(comment._id, context.state.project._id)}>x</span>\r\n                                            <div className=\"commentImg\"><img alt=\"Medarbejderbillede\" src={comment.imageurl}></img></div>\r\n                                            <span className=\"commentName\">{comment.fullname}</span>\r\n                                            <span className=\"commentDate\">{moment(comment.date).fromNow()}</span>\r\n                                            <div className=\"commentContent\">{comment.comment}</div>\r\n                                        </div>\r\n                                    </div>\r\n                                )}\r\n                            </div>\r\n\r\n                        </>\r\n                    )}\r\n                </ProjectContext.Consumer>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nProjects.contextType = ProjectContext;\r\n\r\nexport default Projects;\r\n","import React, { Component } from 'react';\r\nimport { ProjectContext } from './Contexts/ProjectProvider';\r\n\r\n\r\nclass ProjectReload extends Component {\r\n\r\n    async componentDidMount() {\r\n        await this.context.getProjects()\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <>\r\n\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nProjectReload.contextType = ProjectContext;\r\n\r\nexport default ProjectReload;\r\n","import React, { Component } from 'react';\r\nimport { CustomerContext } from './Contexts/CustomerProvider';\r\n\r\n\r\nclass CustomerReload extends Component {\r\n\r\n    async componentDidMount() {\r\n        await this.context.getCustomers()\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <>\r\n\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nCustomerReload.contextType = CustomerContext;\r\n\r\nexport default CustomerReload;\r\n","import React, { Component } from 'react';\r\nimport { UserContext } from './Contexts/UserProvider';\r\nimport { Link } from \"@reach/router\";\r\n\r\n\r\nclass TopBar extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showStatusMenu: false\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.context.getUsers()\r\n        await this.context.getLoggedInUser(localStorage.getItem(\"username\"))\r\n    }\r\n\r\n    showStatusMenu(){\r\n        this.setState({showStatusMenu: !this.state.showStatusMenu})\r\n    }\r\n\r\n    async updateUserStatus(text, style){\r\n        await this.context.updateUserStatus(text, style)\r\n        await this.context.getUsers()\r\n        await this.context.getLoggedInUser(localStorage.getItem(\"username\"))\r\n        this.showStatusMenu()\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <>\r\n                <UserContext.Consumer>\r\n                    {(context) => (\r\n                        <>\r\n                            {context.state.isLoggedIn ?\r\n                                <>\r\n                                    <div className=\"topBar\">\r\n                                        <div className=\"topBarUserContainer\">\r\n                                            <div className=\"topBarUser\">\r\n                                                <span className=\"topBarUsername\">{context.state.loggedInUser.fullname}</span>\r\n                                                <span className=\"topBarWrapper\">\r\n                                                    <img className=\"topBarImg\" src={context.state.loggedInUser.imageurl} alt=\"Medarbejderbillede\" onClick={() => this.showStatusMenu()}></img>\r\n                                                    <div className=\"topBarStatus\" id={context.state.loggedInUser.status.class} onClick={() => this.showStatusMenu()}></div>\r\n                                                    {this.state.showStatusMenu ? <>\r\n                                                        <div className=\"topBarStatusMenu\">\r\n                                                            <li onClick={() => this.updateUserStatus(\"Ledig\", \"available\")}>Ledig <span id=\"available\"></span></li>\r\n                                                            <li onClick={() => this.updateUserStatus(\"I et møde\", \"meeting\")}>I et møde <span id=\"meeting\"></span></li>\r\n                                                            <li onClick={() => this.updateUserStatus(\"Arbejder hjemmefra\", \"wfh\")}>Arbejder hjemmefra <span id=\"wfh\"></span></li>\r\n                                                            <li onClick={() => this.updateUserStatus(\"Syg\", \"sick\")}>Syg<span id=\"sick\"></span></li>\r\n                                                            <li onClick={() => this.updateUserStatus(\"Ude af kontoret\", \"oof\")}>Ude af kontoret<span id=\"oof\"></span></li>\r\n                                                            <li onClick={() => context.logOut()}>Log ud</li>\r\n                                                        </div>\r\n                                                    </> : <></>}\r\n                                                </span>\r\n                                                \r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </>\r\n                                :\r\n                                <>\r\n                                    <div className=\"topBar\">\r\n                                        <div className=\"topBarUserContainer\">\r\n                                            <div className=\"topBarUser\">\r\n                                                <Link to=\"/\">Log ind</Link>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </>\r\n                            }\r\n\r\n                        </>\r\n                    )}\r\n                </UserContext.Consumer>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nTopBar.contextType = UserContext;\r\n\r\nexport default TopBar;\r\n","import React, { Component } from 'react';\r\nimport { UserContext } from './Contexts/UserProvider';\r\nimport moment from 'moment';\r\n\r\nclass News extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.context.getUsers()\r\n        await this.context.getUpdates()\r\n    }\r\n\r\n    findUser(id) {\r\n        let user = this.context.state.users.find(u => u._id === id)\r\n        if (user !== undefined) {\r\n            return user.fullname\r\n        }\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n            <>\r\n                <h1>Opdateringer</h1>\r\n                <UserContext.Consumer>\r\n                    {(context) => (\r\n                        <>\r\n                            {context.state.updates.map(u =>\r\n                                <div className=\"news\">\r\n                                    <span>{this.findUser(u.byuser)}</span>\r\n                                    <span> {u.text}</span>\r\n                                    <span>{u.about}</span>\r\n                                    <span className=\"newsDate\">{moment(parseInt(u.date)).fromNow()}</span>\r\n                                </div>\r\n                            )}\r\n                        </>\r\n                    )}\r\n                </UserContext.Consumer>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nNews.contextType = UserContext;\r\n\r\nexport default News;\r\n","import React, { Component } from 'react';\nimport { Router, Link } from \"@reach/router\";\nimport AuthService from \"./AuthService\";\nimport UserProvider from \"./Contexts/UserProvider\";\nimport CustomerProvider from \"./Contexts/CustomerProvider\";\nimport ProjectProvider from \"./Contexts/ProjectProvider\";\nimport Login from \"./Login\";\nimport Users from \"./Users\";\nimport User from \"./User\";\nimport Customers from \"./Customers\";\nimport Customer from \"./Customer\";\nimport Projects from \"./Projects\";\nimport Project from \"./Project\";\nimport ProjectReload from \"./ProjectReload\";\nimport CustomerReload from \"./CustomerReload\";\nimport TopBar from \"./TopBar\";\nimport News from \"./News\";\nimport './App.css';\n\nclass App extends Component {\n  API_URL = process.env.REACT_APP_API_URL;;\n\n  constructor(props) {\n    super(props);\n    this.Auth = new AuthService(`${this.API_URL}/user/authenticate`);\n  }\n\n  activeMenu(event){\n    document.getElementsByClassName(\"active\")[0].classList.remove(\"active\");\n    event.currentTarget.classList.add(\"active\")\n  }\n\n  render() {\n\n    let isLoggedIn = localStorage.getItem(\"username\")\n\n    return (\n      <>\n\n        {isLoggedIn ?\n          <>\n            <nav>\n              <Link to=\"/\"><li onClick={event => this.activeMenu(event)} className=\"active\"><i className=\"material-icons-outlined\">store</i>Forside</li></Link>\n              <Link to=\"/users\"><li onClick={event => this.activeMenu(event)}><i className=\"material-icons-outlined\">face</i>Medarbejdere</li></Link>\n              <Link to=\"/customers\"><li onClick={event => this.activeMenu(event)}><i className=\"material-icons-outlined\">local_mall</i>Kunder</li></Link>\n              <Link to=\"/projects\"><li onClick={event => this.activeMenu(event)}><i className=\"material-icons-outlined\">content_copy</i>Projekter</li></Link>\n            </nav>\n          </>\n          :\n          <>\n            <nav>\n              <li><Link to=\"/\">Log ind</Link></li>\n            </nav>\n          </>}\n        <CustomerProvider>\n        <ProjectProvider>\n          <UserProvider>\n            <TopBar></TopBar>\n            <ProjectReload></ProjectReload>\n            <CustomerReload></CustomerReload>\n            <div className=\"container\">\n              <Router>\n                {isLoggedIn ?\n                  <>\n                    <Users path=\"/users\"></Users>\n                    <User path=\"/user/:username\"></User>\n                    <Customer path=\"/customer/:id\"></Customer>\n                    <Customers path=\"/customers\"></Customers>\n                    <Projects path=\"/projects\"></Projects>\n                    <Project path=\"/project/:id\"></Project>\n                    <News path=\"/\"></News>\n                  </>\n                  :\n                  <>\n                    <Login path=\"/\" login={(username, password) => this.login(username, password)}></Login>\n                  </>}\n              </Router>\n            </div>\n          </UserProvider>\n        </ProjectProvider>\n        </CustomerProvider>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}